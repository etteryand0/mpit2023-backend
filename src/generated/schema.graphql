### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AggregateCategory {
  _avg: CategoryAvgAggregateOutputType
  _count: CategoryCountAggregateOutputType
  _max: CategoryMaxAggregateOutputType
  _min: CategoryMinAggregateOutputType
  _sum: CategorySumAggregateOutputType
}

type AggregateChat {
  _count: ChatCountAggregateOutputType
  _max: ChatMaxAggregateOutputType
  _min: ChatMinAggregateOutputType
}

type AggregateEvent {
  _count: EventCountAggregateOutputType
  _max: EventMaxAggregateOutputType
  _min: EventMinAggregateOutputType
}

type AggregateMessage {
  _count: MessageCountAggregateOutputType
  _max: MessageMaxAggregateOutputType
  _min: MessageMinAggregateOutputType
}

type AggregateProfile {
  _count: ProfileCountAggregateOutputType
  _max: ProfileMaxAggregateOutputType
  _min: ProfileMinAggregateOutputType
}

type AggregateRoom {
  _count: RoomCountAggregateOutputType
  _max: RoomMaxAggregateOutputType
  _min: RoomMinAggregateOutputType
}

type AggregateShortLink {
  _count: ShortLinkCountAggregateOutputType
  _max: ShortLinkMaxAggregateOutputType
  _min: ShortLinkMinAggregateOutputType
}

type AggregateUser {
  _count: UserCountAggregateOutputType
  _max: UserMaxAggregateOutputType
  _min: UserMinAggregateOutputType
}

type BatchPayload {
  count: Int!
}

"""
The `BigInt` scalar type represents non-fractional signed whole numeric values.
@see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt
"""
scalar BigInt

input BoolFieldUpdateOperationsInput {
  set: Boolean
}

input BoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input BoolWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedBoolFilter
  _min: NestedBoolFilter
  equals: Boolean
  not: NestedBoolWithAggregatesFilter
}

"""The `Byte` scalar type represents byte value as a Buffer"""
scalar Bytes

type Category {
  _count: CategoryCountOutputType!
  events(cursor: EventWhereUniqueInput, distinct: EventScalarFieldEnum, orderBy: EventOrderByWithRelationInput, skip: Int, take: Int, where: EventWhereInput): [Event!]!
  id: Int!
  title: String!
}

type CategoryAvgAggregateOutputType {
  id: Float
}

input CategoryAvgOrderByAggregateInput {
  id: SortOrder
}

type CategoryCountAggregateOutputType {
  _all: Int!
  id: Int!
  title: Int!
}

input CategoryCountOrderByAggregateInput {
  id: SortOrder
  title: SortOrder
}

type CategoryCountOutputType {
  events: Int!
}

input CategoryCreateInput {
  events: EventCreateNestedManyWithoutCategoriesInput
  title: String!
}

input CategoryCreateManyInput {
  id: Int
  title: String!
}

input CategoryCreateNestedManyWithoutEventsInput {
  connect: [CategoryWhereUniqueInput]
  connectOrCreate: [CategoryCreateOrConnectWithoutEventsInput]
  create: [CategoryCreateWithoutEventsInput]
}

input CategoryCreateOrConnectWithoutEventsInput {
  create: CategoryUncheckedCreateWithoutEventsInput!
  where: CategoryWhereUniqueInput!
}

input CategoryCreateWithoutEventsInput {
  title: String!
}

input CategoryListRelationFilter {
  every: CategoryWhereInput
  none: CategoryWhereInput
  some: CategoryWhereInput
}

type CategoryMaxAggregateOutputType {
  id: Int
  title: String
}

input CategoryMaxOrderByAggregateInput {
  id: SortOrder
  title: SortOrder
}

type CategoryMinAggregateOutputType {
  id: Int
  title: String
}

input CategoryMinOrderByAggregateInput {
  id: SortOrder
  title: SortOrder
}

input CategoryOrderByRelationAggregateInput {
  _count: SortOrder
}

input CategoryOrderByWithAggregationInput {
  _avg: CategoryAvgOrderByAggregateInput
  _count: CategoryCountOrderByAggregateInput
  _max: CategoryMaxOrderByAggregateInput
  _min: CategoryMinOrderByAggregateInput
  _sum: CategorySumOrderByAggregateInput
  id: SortOrder
  title: SortOrder
}

input CategoryOrderByWithRelationInput {
  events: EventOrderByRelationAggregateInput
  id: SortOrder
  title: SortOrder
}

enum CategoryScalarFieldEnum {
  id
  title
}

input CategoryScalarWhereInput {
  AND: [CategoryScalarWhereInput]
  NOT: [CategoryScalarWhereInput]
  OR: [CategoryScalarWhereInput]
  id: IntFilter
  title: StringFilter
}

input CategoryScalarWhereWithAggregatesInput {
  AND: [CategoryScalarWhereWithAggregatesInput]
  NOT: [CategoryScalarWhereWithAggregatesInput]
  OR: [CategoryScalarWhereWithAggregatesInput]
  id: IntWithAggregatesFilter
  title: StringWithAggregatesFilter
}

type CategorySumAggregateOutputType {
  id: Int
}

input CategorySumOrderByAggregateInput {
  id: SortOrder
}

input CategoryUncheckedCreateInput {
  events: EventUncheckedCreateNestedManyWithoutCategoriesInput
  id: Int
  title: String!
}

input CategoryUncheckedCreateNestedManyWithoutEventsInput {
  connect: [CategoryWhereUniqueInput]
  connectOrCreate: [CategoryCreateOrConnectWithoutEventsInput]
  create: [CategoryCreateWithoutEventsInput]
}

input CategoryUncheckedCreateWithoutEventsInput {
  id: Int
  title: String!
}

input CategoryUncheckedUpdateInput {
  events: EventUncheckedUpdateManyWithoutCategoriesNestedInput
  id: IntFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input CategoryUncheckedUpdateManyInput {
  id: IntFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input CategoryUncheckedUpdateManyWithoutCategoriesInput {
  id: IntFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input CategoryUncheckedUpdateManyWithoutEventsNestedInput {
  connect: [CategoryWhereUniqueInput]
  connectOrCreate: [CategoryCreateOrConnectWithoutEventsInput]
  create: [CategoryCreateWithoutEventsInput]
  delete: [CategoryWhereUniqueInput]
  deleteMany: [CategoryScalarWhereInput]
  disconnect: [CategoryWhereUniqueInput]
  set: [CategoryWhereUniqueInput]
  update: [CategoryUpdateWithWhereUniqueWithoutEventsInput]
  updateMany: [CategoryUpdateManyWithWhereWithoutEventsInput]
  upsert: [CategoryUpsertWithWhereUniqueWithoutEventsInput]
}

input CategoryUncheckedUpdateWithoutEventsInput {
  id: IntFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input CategoryUpdateInput {
  events: EventUpdateManyWithoutCategoriesNestedInput
  title: StringFieldUpdateOperationsInput
}

input CategoryUpdateManyMutationInput {
  title: StringFieldUpdateOperationsInput
}

input CategoryUpdateManyWithWhereWithoutEventsInput {
  data: CategoryUncheckedUpdateManyWithoutCategoriesInput!
  where: CategoryScalarWhereInput!
}

input CategoryUpdateManyWithoutEventsNestedInput {
  connect: [CategoryWhereUniqueInput]
  connectOrCreate: [CategoryCreateOrConnectWithoutEventsInput]
  create: [CategoryCreateWithoutEventsInput]
  delete: [CategoryWhereUniqueInput]
  deleteMany: [CategoryScalarWhereInput]
  disconnect: [CategoryWhereUniqueInput]
  set: [CategoryWhereUniqueInput]
  update: [CategoryUpdateWithWhereUniqueWithoutEventsInput]
  updateMany: [CategoryUpdateManyWithWhereWithoutEventsInput]
  upsert: [CategoryUpsertWithWhereUniqueWithoutEventsInput]
}

input CategoryUpdateWithWhereUniqueWithoutEventsInput {
  data: CategoryUncheckedUpdateWithoutEventsInput!
  where: CategoryWhereUniqueInput!
}

input CategoryUpdateWithoutEventsInput {
  title: StringFieldUpdateOperationsInput
}

input CategoryUpsertWithWhereUniqueWithoutEventsInput {
  create: CategoryUncheckedCreateWithoutEventsInput!
  update: CategoryUncheckedUpdateWithoutEventsInput!
  where: CategoryWhereUniqueInput!
}

input CategoryWhereInput {
  AND: [CategoryWhereInput]
  NOT: [CategoryWhereInput]
  OR: [CategoryWhereInput]
  events: EventListRelationFilter
  id: IntFilter
  title: StringFilter
}

input CategoryWhereUniqueInput {
  id: Int
}

type Chat {
  _count: ChatCountOutputType!
  createdAt: DateTime!
  event: Event!
  eventId: String!
  id: String!
  members(cursor: UserWhereUniqueInput, distinct: UserScalarFieldEnum, orderBy: UserOrderByWithRelationInput, skip: Int, take: Int, where: UserWhereInput): [User!]!
  messages(cursor: MessageWhereUniqueInput, distinct: MessageScalarFieldEnum, orderBy: MessageOrderByWithRelationInput, skip: Int, take: Int, where: MessageWhereInput): [Message!]!
}

type ChatCountAggregateOutputType {
  _all: Int!
  createdAt: Int!
  eventId: Int!
  id: Int!
}

input ChatCountOrderByAggregateInput {
  createdAt: SortOrder
  eventId: SortOrder
  id: SortOrder
}

type ChatCountOutputType {
  members: Int!
  messages: Int!
}

input ChatCreateInput {
  createdAt: DateTime
  event: EventCreateNestedOneWithoutChatInput!
  id: String
  members: UserCreateNestedManyWithoutChatsInput
  messages: MessageCreateNestedManyWithoutChatInput
}

input ChatCreateManyInput {
  createdAt: DateTime
  eventId: String!
  id: String
}

input ChatCreateNestedManyWithoutMembersInput {
  connect: [ChatWhereUniqueInput]
  connectOrCreate: [ChatCreateOrConnectWithoutMembersInput]
  create: [ChatCreateWithoutMembersInput]
}

input ChatCreateNestedOneWithoutEventInput {
  connect: ChatWhereUniqueInput
  connectOrCreate: ChatCreateOrConnectWithoutEventInput
  create: ChatUncheckedCreateWithoutEventInput
}

input ChatCreateNestedOneWithoutMessagesInput {
  connect: ChatWhereUniqueInput
  connectOrCreate: ChatCreateOrConnectWithoutMessagesInput
  create: ChatUncheckedCreateWithoutMessagesInput
}

input ChatCreateOrConnectWithoutEventInput {
  create: ChatUncheckedCreateWithoutEventInput!
  where: ChatWhereUniqueInput!
}

input ChatCreateOrConnectWithoutMembersInput {
  create: ChatUncheckedCreateWithoutMembersInput!
  where: ChatWhereUniqueInput!
}

input ChatCreateOrConnectWithoutMessagesInput {
  create: ChatUncheckedCreateWithoutMessagesInput!
  where: ChatWhereUniqueInput!
}

input ChatCreateWithoutEventInput {
  createdAt: DateTime
  id: String
  members: UserCreateNestedManyWithoutChatsInput
  messages: MessageCreateNestedManyWithoutChatInput
}

input ChatCreateWithoutMembersInput {
  createdAt: DateTime
  event: EventCreateNestedOneWithoutChatInput!
  id: String
  messages: MessageCreateNestedManyWithoutChatInput
}

input ChatCreateWithoutMessagesInput {
  createdAt: DateTime
  event: EventCreateNestedOneWithoutChatInput!
  id: String
  members: UserCreateNestedManyWithoutChatsInput
}

input ChatListRelationFilter {
  every: ChatWhereInput
  none: ChatWhereInput
  some: ChatWhereInput
}

type ChatMaxAggregateOutputType {
  createdAt: DateTime
  eventId: String
  id: String
}

input ChatMaxOrderByAggregateInput {
  createdAt: SortOrder
  eventId: SortOrder
  id: SortOrder
}

type ChatMinAggregateOutputType {
  createdAt: DateTime
  eventId: String
  id: String
}

input ChatMinOrderByAggregateInput {
  createdAt: SortOrder
  eventId: SortOrder
  id: SortOrder
}

input ChatOrderByRelationAggregateInput {
  _count: SortOrder
}

input ChatOrderByWithAggregationInput {
  _count: ChatCountOrderByAggregateInput
  _max: ChatMaxOrderByAggregateInput
  _min: ChatMinOrderByAggregateInput
  createdAt: SortOrder
  eventId: SortOrder
  id: SortOrder
}

input ChatOrderByWithRelationInput {
  createdAt: SortOrder
  event: EventOrderByWithRelationInput
  eventId: SortOrder
  id: SortOrder
  members: UserOrderByRelationAggregateInput
  messages: MessageOrderByRelationAggregateInput
}

input ChatRelationFilter {
  is: ChatWhereInput
  isNot: ChatWhereInput
}

enum ChatScalarFieldEnum {
  createdAt
  eventId
  id
}

input ChatScalarWhereInput {
  AND: [ChatScalarWhereInput]
  NOT: [ChatScalarWhereInput]
  OR: [ChatScalarWhereInput]
  createdAt: DateTimeFilter
  eventId: StringFilter
  id: StringFilter
}

input ChatScalarWhereWithAggregatesInput {
  AND: [ChatScalarWhereWithAggregatesInput]
  NOT: [ChatScalarWhereWithAggregatesInput]
  OR: [ChatScalarWhereWithAggregatesInput]
  createdAt: DateTimeWithAggregatesFilter
  eventId: StringWithAggregatesFilter
  id: StringWithAggregatesFilter
}

input ChatUncheckedCreateInput {
  createdAt: DateTime
  eventId: String!
  id: String
  members: UserUncheckedCreateNestedManyWithoutChatsInput
  messages: MessageUncheckedCreateNestedManyWithoutChatInput
}

input ChatUncheckedCreateNestedManyWithoutMembersInput {
  connect: [ChatWhereUniqueInput]
  connectOrCreate: [ChatCreateOrConnectWithoutMembersInput]
  create: [ChatCreateWithoutMembersInput]
}

input ChatUncheckedCreateNestedOneWithoutEventInput {
  connect: ChatWhereUniqueInput
  connectOrCreate: ChatCreateOrConnectWithoutEventInput
  create: ChatUncheckedCreateWithoutEventInput
}

input ChatUncheckedCreateWithoutEventInput {
  createdAt: DateTime
  id: String
  members: UserUncheckedCreateNestedManyWithoutChatsInput
  messages: MessageUncheckedCreateNestedManyWithoutChatInput
}

input ChatUncheckedCreateWithoutMembersInput {
  createdAt: DateTime
  eventId: String!
  id: String
  messages: MessageUncheckedCreateNestedManyWithoutChatInput
}

input ChatUncheckedCreateWithoutMessagesInput {
  createdAt: DateTime
  eventId: String!
  id: String
  members: UserUncheckedCreateNestedManyWithoutChatsInput
}

input ChatUncheckedUpdateInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  eventId: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  members: UserUncheckedUpdateManyWithoutChatsNestedInput
  messages: MessageUncheckedUpdateManyWithoutChatNestedInput
}

input ChatUncheckedUpdateManyInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  eventId: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
}

input ChatUncheckedUpdateManyWithoutChatsInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  eventId: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
}

input ChatUncheckedUpdateManyWithoutMembersNestedInput {
  connect: [ChatWhereUniqueInput]
  connectOrCreate: [ChatCreateOrConnectWithoutMembersInput]
  create: [ChatCreateWithoutMembersInput]
  delete: [ChatWhereUniqueInput]
  deleteMany: [ChatScalarWhereInput]
  disconnect: [ChatWhereUniqueInput]
  set: [ChatWhereUniqueInput]
  update: [ChatUpdateWithWhereUniqueWithoutMembersInput]
  updateMany: [ChatUpdateManyWithWhereWithoutMembersInput]
  upsert: [ChatUpsertWithWhereUniqueWithoutMembersInput]
}

input ChatUncheckedUpdateOneWithoutEventNestedInput {
  connect: ChatWhereUniqueInput
  connectOrCreate: ChatCreateOrConnectWithoutEventInput
  create: ChatUncheckedCreateWithoutEventInput
  delete: Boolean
  disconnect: Boolean
  update: ChatUncheckedUpdateWithoutEventInput
  upsert: ChatUpsertWithoutEventInput
}

input ChatUncheckedUpdateWithoutEventInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  members: UserUncheckedUpdateManyWithoutChatsNestedInput
  messages: MessageUncheckedUpdateManyWithoutChatNestedInput
}

input ChatUncheckedUpdateWithoutMembersInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  eventId: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  messages: MessageUncheckedUpdateManyWithoutChatNestedInput
}

input ChatUncheckedUpdateWithoutMessagesInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  eventId: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  members: UserUncheckedUpdateManyWithoutChatsNestedInput
}

input ChatUpdateInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  event: EventUpdateOneRequiredWithoutChatNestedInput
  id: StringFieldUpdateOperationsInput
  members: UserUpdateManyWithoutChatsNestedInput
  messages: MessageUpdateManyWithoutChatNestedInput
}

input ChatUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
}

input ChatUpdateManyWithWhereWithoutMembersInput {
  data: ChatUncheckedUpdateManyWithoutChatsInput!
  where: ChatScalarWhereInput!
}

input ChatUpdateManyWithoutMembersNestedInput {
  connect: [ChatWhereUniqueInput]
  connectOrCreate: [ChatCreateOrConnectWithoutMembersInput]
  create: [ChatCreateWithoutMembersInput]
  delete: [ChatWhereUniqueInput]
  deleteMany: [ChatScalarWhereInput]
  disconnect: [ChatWhereUniqueInput]
  set: [ChatWhereUniqueInput]
  update: [ChatUpdateWithWhereUniqueWithoutMembersInput]
  updateMany: [ChatUpdateManyWithWhereWithoutMembersInput]
  upsert: [ChatUpsertWithWhereUniqueWithoutMembersInput]
}

input ChatUpdateOneRequiredWithoutMessagesNestedInput {
  connect: ChatWhereUniqueInput
  connectOrCreate: ChatCreateOrConnectWithoutMessagesInput
  create: ChatUncheckedCreateWithoutMessagesInput
  update: ChatUncheckedUpdateWithoutMessagesInput
  upsert: ChatUpsertWithoutMessagesInput
}

input ChatUpdateOneWithoutEventNestedInput {
  connect: ChatWhereUniqueInput
  connectOrCreate: ChatCreateOrConnectWithoutEventInput
  create: ChatUncheckedCreateWithoutEventInput
  delete: Boolean
  disconnect: Boolean
  update: ChatUncheckedUpdateWithoutEventInput
  upsert: ChatUpsertWithoutEventInput
}

input ChatUpdateWithWhereUniqueWithoutMembersInput {
  data: ChatUncheckedUpdateWithoutMembersInput!
  where: ChatWhereUniqueInput!
}

input ChatUpdateWithoutEventInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  members: UserUpdateManyWithoutChatsNestedInput
  messages: MessageUpdateManyWithoutChatNestedInput
}

input ChatUpdateWithoutMembersInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  event: EventUpdateOneRequiredWithoutChatNestedInput
  id: StringFieldUpdateOperationsInput
  messages: MessageUpdateManyWithoutChatNestedInput
}

input ChatUpdateWithoutMessagesInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  event: EventUpdateOneRequiredWithoutChatNestedInput
  id: StringFieldUpdateOperationsInput
  members: UserUpdateManyWithoutChatsNestedInput
}

input ChatUpsertWithWhereUniqueWithoutMembersInput {
  create: ChatUncheckedCreateWithoutMembersInput!
  update: ChatUncheckedUpdateWithoutMembersInput!
  where: ChatWhereUniqueInput!
}

input ChatUpsertWithoutEventInput {
  create: ChatUncheckedCreateWithoutEventInput!
  update: ChatUncheckedUpdateWithoutEventInput!
}

input ChatUpsertWithoutMessagesInput {
  create: ChatUncheckedCreateWithoutMessagesInput!
  update: ChatUncheckedUpdateWithoutMessagesInput!
}

input ChatWhereInput {
  AND: [ChatWhereInput]
  NOT: [ChatWhereInput]
  OR: [ChatWhereInput]
  createdAt: DateTimeFilter
  event: EventWhereInput
  eventId: StringFilter
  id: StringFilter
  members: UserListRelationFilter
  messages: MessageListRelationFilter
}

input ChatWhereUniqueInput {
  eventId: String
  id: String
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

input DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime]
}

input DateTimeWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedDateTimeFilter
  _min: NestedDateTimeFilter
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeWithAggregatesFilter
  notIn: [DateTime]
}

"""An arbitrary-precision Decimal type"""
scalar Decimal

input EnumUserRoleFieldUpdateOperationsInput {
  set: UserRole
}

input EnumUserRoleFilter {
  equals: UserRole
  in: [UserRole]
  not: NestedEnumUserRoleFilter
  notIn: [UserRole]
}

input EnumUserRoleWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumUserRoleFilter
  _min: NestedEnumUserRoleFilter
  equals: UserRole
  in: [UserRole]
  not: NestedEnumUserRoleWithAggregatesFilter
  notIn: [UserRole]
}

type Event {
  _count: EventCountOutputType!
  approved: Boolean!
  categories(cursor: CategoryWhereUniqueInput, distinct: CategoryScalarFieldEnum, orderBy: CategoryOrderByWithRelationInput, skip: Int, take: Int, where: CategoryWhereInput): [Category!]!
  chat: Chat
  date: DateTime!
  description: String!
  id: String!
  image: String
  issuedBy: User
  participants(cursor: UserWhereUniqueInput, distinct: UserScalarFieldEnum, orderBy: UserOrderByWithRelationInput, skip: Int, take: Int, where: UserWhereInput): [User!]!
  responsibles(cursor: UserWhereUniqueInput, distinct: UserScalarFieldEnum, orderBy: UserOrderByWithRelationInput, skip: Int, take: Int, where: UserWhereInput): [User!]!
  room: Room!
  roomId: String!
  shortDescription: String!
  shortLinks(cursor: ShortLinkWhereUniqueInput, distinct: ShortLinkScalarFieldEnum, orderBy: ShortLinkOrderByWithRelationInput, skip: Int, take: Int, where: ShortLinkWhereInput): [ShortLink!]!
  title: String!
  userId: String
}

type EventCountAggregateOutputType {
  _all: Int!
  approved: Int!
  date: Int!
  description: Int!
  id: Int!
  image: Int!
  roomId: Int!
  shortDescription: Int!
  title: Int!
  userId: Int!
}

input EventCountOrderByAggregateInput {
  approved: SortOrder
  date: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  roomId: SortOrder
  shortDescription: SortOrder
  title: SortOrder
  userId: SortOrder
}

type EventCountOutputType {
  categories: Int!
  participants: Int!
  responsibles: Int!
  shortLinks: Int!
}

input EventCreateInput {
  approved: Boolean
  categories: CategoryCreateNestedManyWithoutEventsInput
  chat: ChatCreateNestedOneWithoutEventInput
  date: DateTime!
  description: String!
  id: String!
  image: String
  issuedBy: UserCreateNestedOneWithoutEventsIssuedInput
  participants: UserCreateNestedManyWithoutEventsParticipatingInput
  responsibles: UserCreateNestedManyWithoutEventsResponsibleInput
  room: RoomCreateNestedOneWithoutEventsInput!
  shortDescription: String!
  shortLinks: ShortLinkCreateNestedManyWithoutEventInput
  title: String!
}

input EventCreateManyInput {
  approved: Boolean
  date: DateTime!
  description: String!
  id: String!
  image: String
  roomId: String!
  shortDescription: String!
  title: String!
  userId: String
}

input EventCreateManyIssuedByInput {
  approved: Boolean
  date: DateTime!
  description: String!
  id: String!
  image: String
  roomId: String!
  shortDescription: String!
  title: String!
}

input EventCreateManyIssuedByInputEnvelope {
  data: EventCreateManyIssuedByInput!
  skipDuplicates: Boolean
}

input EventCreateManyRoomInput {
  approved: Boolean
  date: DateTime!
  description: String!
  id: String!
  image: String
  shortDescription: String!
  title: String!
  userId: String
}

input EventCreateManyRoomInputEnvelope {
  data: EventCreateManyRoomInput!
  skipDuplicates: Boolean
}

input EventCreateNestedManyWithoutCategoriesInput {
  connect: [EventWhereUniqueInput]
  connectOrCreate: [EventCreateOrConnectWithoutCategoriesInput]
  create: [EventCreateWithoutCategoriesInput]
}

input EventCreateNestedManyWithoutIssuedByInput {
  connect: [EventWhereUniqueInput]
  connectOrCreate: [EventCreateOrConnectWithoutIssuedByInput]
  create: [EventCreateWithoutIssuedByInput]
  createMany: EventCreateManyIssuedByInputEnvelope
}

input EventCreateNestedManyWithoutParticipantsInput {
  connect: [EventWhereUniqueInput]
  connectOrCreate: [EventCreateOrConnectWithoutParticipantsInput]
  create: [EventCreateWithoutParticipantsInput]
}

input EventCreateNestedManyWithoutResponsiblesInput {
  connect: [EventWhereUniqueInput]
  connectOrCreate: [EventCreateOrConnectWithoutResponsiblesInput]
  create: [EventCreateWithoutResponsiblesInput]
}

input EventCreateNestedManyWithoutRoomInput {
  connect: [EventWhereUniqueInput]
  connectOrCreate: [EventCreateOrConnectWithoutRoomInput]
  create: [EventCreateWithoutRoomInput]
  createMany: EventCreateManyRoomInputEnvelope
}

input EventCreateNestedOneWithoutChatInput {
  connect: EventWhereUniqueInput
  connectOrCreate: EventCreateOrConnectWithoutChatInput
  create: EventUncheckedCreateWithoutChatInput
}

input EventCreateNestedOneWithoutShortLinksInput {
  connect: EventWhereUniqueInput
  connectOrCreate: EventCreateOrConnectWithoutShortLinksInput
  create: EventUncheckedCreateWithoutShortLinksInput
}

input EventCreateOrConnectWithoutCategoriesInput {
  create: EventUncheckedCreateWithoutCategoriesInput!
  where: EventWhereUniqueInput!
}

input EventCreateOrConnectWithoutChatInput {
  create: EventUncheckedCreateWithoutChatInput!
  where: EventWhereUniqueInput!
}

input EventCreateOrConnectWithoutIssuedByInput {
  create: EventUncheckedCreateWithoutIssuedByInput!
  where: EventWhereUniqueInput!
}

input EventCreateOrConnectWithoutParticipantsInput {
  create: EventUncheckedCreateWithoutParticipantsInput!
  where: EventWhereUniqueInput!
}

input EventCreateOrConnectWithoutResponsiblesInput {
  create: EventUncheckedCreateWithoutResponsiblesInput!
  where: EventWhereUniqueInput!
}

input EventCreateOrConnectWithoutRoomInput {
  create: EventUncheckedCreateWithoutRoomInput!
  where: EventWhereUniqueInput!
}

input EventCreateOrConnectWithoutShortLinksInput {
  create: EventUncheckedCreateWithoutShortLinksInput!
  where: EventWhereUniqueInput!
}

input EventCreateWithoutCategoriesInput {
  approved: Boolean
  chat: ChatCreateNestedOneWithoutEventInput
  date: DateTime!
  description: String!
  id: String!
  image: String
  issuedBy: UserCreateNestedOneWithoutEventsIssuedInput
  participants: UserCreateNestedManyWithoutEventsParticipatingInput
  responsibles: UserCreateNestedManyWithoutEventsResponsibleInput
  room: RoomCreateNestedOneWithoutEventsInput!
  shortDescription: String!
  shortLinks: ShortLinkCreateNestedManyWithoutEventInput
  title: String!
}

input EventCreateWithoutChatInput {
  approved: Boolean
  categories: CategoryCreateNestedManyWithoutEventsInput
  date: DateTime!
  description: String!
  id: String!
  image: String
  issuedBy: UserCreateNestedOneWithoutEventsIssuedInput
  participants: UserCreateNestedManyWithoutEventsParticipatingInput
  responsibles: UserCreateNestedManyWithoutEventsResponsibleInput
  room: RoomCreateNestedOneWithoutEventsInput!
  shortDescription: String!
  shortLinks: ShortLinkCreateNestedManyWithoutEventInput
  title: String!
}

input EventCreateWithoutIssuedByInput {
  approved: Boolean
  categories: CategoryCreateNestedManyWithoutEventsInput
  chat: ChatCreateNestedOneWithoutEventInput
  date: DateTime!
  description: String!
  id: String!
  image: String
  participants: UserCreateNestedManyWithoutEventsParticipatingInput
  responsibles: UserCreateNestedManyWithoutEventsResponsibleInput
  room: RoomCreateNestedOneWithoutEventsInput!
  shortDescription: String!
  shortLinks: ShortLinkCreateNestedManyWithoutEventInput
  title: String!
}

input EventCreateWithoutParticipantsInput {
  approved: Boolean
  categories: CategoryCreateNestedManyWithoutEventsInput
  chat: ChatCreateNestedOneWithoutEventInput
  date: DateTime!
  description: String!
  id: String!
  image: String
  issuedBy: UserCreateNestedOneWithoutEventsIssuedInput
  responsibles: UserCreateNestedManyWithoutEventsResponsibleInput
  room: RoomCreateNestedOneWithoutEventsInput!
  shortDescription: String!
  shortLinks: ShortLinkCreateNestedManyWithoutEventInput
  title: String!
}

input EventCreateWithoutResponsiblesInput {
  approved: Boolean
  categories: CategoryCreateNestedManyWithoutEventsInput
  chat: ChatCreateNestedOneWithoutEventInput
  date: DateTime!
  description: String!
  id: String!
  image: String
  issuedBy: UserCreateNestedOneWithoutEventsIssuedInput
  participants: UserCreateNestedManyWithoutEventsParticipatingInput
  room: RoomCreateNestedOneWithoutEventsInput!
  shortDescription: String!
  shortLinks: ShortLinkCreateNestedManyWithoutEventInput
  title: String!
}

input EventCreateWithoutRoomInput {
  approved: Boolean
  categories: CategoryCreateNestedManyWithoutEventsInput
  chat: ChatCreateNestedOneWithoutEventInput
  date: DateTime!
  description: String!
  id: String!
  image: String
  issuedBy: UserCreateNestedOneWithoutEventsIssuedInput
  participants: UserCreateNestedManyWithoutEventsParticipatingInput
  responsibles: UserCreateNestedManyWithoutEventsResponsibleInput
  shortDescription: String!
  shortLinks: ShortLinkCreateNestedManyWithoutEventInput
  title: String!
}

input EventCreateWithoutShortLinksInput {
  approved: Boolean
  categories: CategoryCreateNestedManyWithoutEventsInput
  chat: ChatCreateNestedOneWithoutEventInput
  date: DateTime!
  description: String!
  id: String!
  image: String
  issuedBy: UserCreateNestedOneWithoutEventsIssuedInput
  participants: UserCreateNestedManyWithoutEventsParticipatingInput
  responsibles: UserCreateNestedManyWithoutEventsResponsibleInput
  room: RoomCreateNestedOneWithoutEventsInput!
  shortDescription: String!
  title: String!
}

input EventListRelationFilter {
  every: EventWhereInput
  none: EventWhereInput
  some: EventWhereInput
}

type EventMaxAggregateOutputType {
  approved: Boolean
  date: DateTime
  description: String
  id: String
  image: String
  roomId: String
  shortDescription: String
  title: String
  userId: String
}

input EventMaxOrderByAggregateInput {
  approved: SortOrder
  date: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  roomId: SortOrder
  shortDescription: SortOrder
  title: SortOrder
  userId: SortOrder
}

type EventMinAggregateOutputType {
  approved: Boolean
  date: DateTime
  description: String
  id: String
  image: String
  roomId: String
  shortDescription: String
  title: String
  userId: String
}

input EventMinOrderByAggregateInput {
  approved: SortOrder
  date: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  roomId: SortOrder
  shortDescription: SortOrder
  title: SortOrder
  userId: SortOrder
}

input EventOrderByRelationAggregateInput {
  _count: SortOrder
}

input EventOrderByWithAggregationInput {
  _count: EventCountOrderByAggregateInput
  _max: EventMaxOrderByAggregateInput
  _min: EventMinOrderByAggregateInput
  approved: SortOrder
  date: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  roomId: SortOrder
  shortDescription: SortOrder
  title: SortOrder
  userId: SortOrder
}

input EventOrderByWithRelationInput {
  approved: SortOrder
  categories: CategoryOrderByRelationAggregateInput
  chat: ChatOrderByWithRelationInput
  date: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  issuedBy: UserOrderByWithRelationInput
  participants: UserOrderByRelationAggregateInput
  responsibles: UserOrderByRelationAggregateInput
  room: RoomOrderByWithRelationInput
  roomId: SortOrder
  shortDescription: SortOrder
  shortLinks: ShortLinkOrderByRelationAggregateInput
  title: SortOrder
  userId: SortOrder
}

input EventRelationFilter {
  is: EventWhereInput
  isNot: EventWhereInput
}

enum EventScalarFieldEnum {
  approved
  date
  description
  id
  image
  roomId
  shortDescription
  title
  userId
}

input EventScalarWhereInput {
  AND: [EventScalarWhereInput]
  NOT: [EventScalarWhereInput]
  OR: [EventScalarWhereInput]
  approved: BoolFilter
  date: DateTimeFilter
  description: StringFilter
  id: StringFilter
  image: StringNullableFilter
  roomId: StringFilter
  shortDescription: StringFilter
  title: StringFilter
  userId: StringNullableFilter
}

input EventScalarWhereWithAggregatesInput {
  AND: [EventScalarWhereWithAggregatesInput]
  NOT: [EventScalarWhereWithAggregatesInput]
  OR: [EventScalarWhereWithAggregatesInput]
  approved: BoolWithAggregatesFilter
  date: DateTimeWithAggregatesFilter
  description: StringWithAggregatesFilter
  id: StringWithAggregatesFilter
  image: StringNullableWithAggregatesFilter
  roomId: StringWithAggregatesFilter
  shortDescription: StringWithAggregatesFilter
  title: StringWithAggregatesFilter
  userId: StringNullableWithAggregatesFilter
}

input EventUncheckedCreateInput {
  approved: Boolean
  categories: CategoryUncheckedCreateNestedManyWithoutEventsInput
  chat: ChatUncheckedCreateNestedOneWithoutEventInput
  date: DateTime!
  description: String!
  id: String!
  image: String
  participants: UserUncheckedCreateNestedManyWithoutEventsParticipatingInput
  responsibles: UserUncheckedCreateNestedManyWithoutEventsResponsibleInput
  roomId: String!
  shortDescription: String!
  shortLinks: ShortLinkUncheckedCreateNestedManyWithoutEventInput
  title: String!
  userId: String
}

input EventUncheckedCreateNestedManyWithoutCategoriesInput {
  connect: [EventWhereUniqueInput]
  connectOrCreate: [EventCreateOrConnectWithoutCategoriesInput]
  create: [EventCreateWithoutCategoriesInput]
}

input EventUncheckedCreateNestedManyWithoutIssuedByInput {
  connect: [EventWhereUniqueInput]
  connectOrCreate: [EventCreateOrConnectWithoutIssuedByInput]
  create: [EventCreateWithoutIssuedByInput]
  createMany: EventCreateManyIssuedByInputEnvelope
}

input EventUncheckedCreateNestedManyWithoutParticipantsInput {
  connect: [EventWhereUniqueInput]
  connectOrCreate: [EventCreateOrConnectWithoutParticipantsInput]
  create: [EventCreateWithoutParticipantsInput]
}

input EventUncheckedCreateNestedManyWithoutResponsiblesInput {
  connect: [EventWhereUniqueInput]
  connectOrCreate: [EventCreateOrConnectWithoutResponsiblesInput]
  create: [EventCreateWithoutResponsiblesInput]
}

input EventUncheckedCreateNestedManyWithoutRoomInput {
  connect: [EventWhereUniqueInput]
  connectOrCreate: [EventCreateOrConnectWithoutRoomInput]
  create: [EventCreateWithoutRoomInput]
  createMany: EventCreateManyRoomInputEnvelope
}

input EventUncheckedCreateWithoutCategoriesInput {
  approved: Boolean
  chat: ChatUncheckedCreateNestedOneWithoutEventInput
  date: DateTime!
  description: String!
  id: String!
  image: String
  participants: UserUncheckedCreateNestedManyWithoutEventsParticipatingInput
  responsibles: UserUncheckedCreateNestedManyWithoutEventsResponsibleInput
  roomId: String!
  shortDescription: String!
  shortLinks: ShortLinkUncheckedCreateNestedManyWithoutEventInput
  title: String!
  userId: String
}

input EventUncheckedCreateWithoutChatInput {
  approved: Boolean
  categories: CategoryUncheckedCreateNestedManyWithoutEventsInput
  date: DateTime!
  description: String!
  id: String!
  image: String
  participants: UserUncheckedCreateNestedManyWithoutEventsParticipatingInput
  responsibles: UserUncheckedCreateNestedManyWithoutEventsResponsibleInput
  roomId: String!
  shortDescription: String!
  shortLinks: ShortLinkUncheckedCreateNestedManyWithoutEventInput
  title: String!
  userId: String
}

input EventUncheckedCreateWithoutIssuedByInput {
  approved: Boolean
  categories: CategoryUncheckedCreateNestedManyWithoutEventsInput
  chat: ChatUncheckedCreateNestedOneWithoutEventInput
  date: DateTime!
  description: String!
  id: String!
  image: String
  participants: UserUncheckedCreateNestedManyWithoutEventsParticipatingInput
  responsibles: UserUncheckedCreateNestedManyWithoutEventsResponsibleInput
  roomId: String!
  shortDescription: String!
  shortLinks: ShortLinkUncheckedCreateNestedManyWithoutEventInput
  title: String!
}

input EventUncheckedCreateWithoutParticipantsInput {
  approved: Boolean
  categories: CategoryUncheckedCreateNestedManyWithoutEventsInput
  chat: ChatUncheckedCreateNestedOneWithoutEventInput
  date: DateTime!
  description: String!
  id: String!
  image: String
  responsibles: UserUncheckedCreateNestedManyWithoutEventsResponsibleInput
  roomId: String!
  shortDescription: String!
  shortLinks: ShortLinkUncheckedCreateNestedManyWithoutEventInput
  title: String!
  userId: String
}

input EventUncheckedCreateWithoutResponsiblesInput {
  approved: Boolean
  categories: CategoryUncheckedCreateNestedManyWithoutEventsInput
  chat: ChatUncheckedCreateNestedOneWithoutEventInput
  date: DateTime!
  description: String!
  id: String!
  image: String
  participants: UserUncheckedCreateNestedManyWithoutEventsParticipatingInput
  roomId: String!
  shortDescription: String!
  shortLinks: ShortLinkUncheckedCreateNestedManyWithoutEventInput
  title: String!
  userId: String
}

input EventUncheckedCreateWithoutRoomInput {
  approved: Boolean
  categories: CategoryUncheckedCreateNestedManyWithoutEventsInput
  chat: ChatUncheckedCreateNestedOneWithoutEventInput
  date: DateTime!
  description: String!
  id: String!
  image: String
  participants: UserUncheckedCreateNestedManyWithoutEventsParticipatingInput
  responsibles: UserUncheckedCreateNestedManyWithoutEventsResponsibleInput
  shortDescription: String!
  shortLinks: ShortLinkUncheckedCreateNestedManyWithoutEventInput
  title: String!
  userId: String
}

input EventUncheckedCreateWithoutShortLinksInput {
  approved: Boolean
  categories: CategoryUncheckedCreateNestedManyWithoutEventsInput
  chat: ChatUncheckedCreateNestedOneWithoutEventInput
  date: DateTime!
  description: String!
  id: String!
  image: String
  participants: UserUncheckedCreateNestedManyWithoutEventsParticipatingInput
  responsibles: UserUncheckedCreateNestedManyWithoutEventsResponsibleInput
  roomId: String!
  shortDescription: String!
  title: String!
  userId: String
}

input EventUncheckedUpdateInput {
  approved: BoolFieldUpdateOperationsInput
  categories: CategoryUncheckedUpdateManyWithoutEventsNestedInput
  chat: ChatUncheckedUpdateOneWithoutEventNestedInput
  date: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  participants: UserUncheckedUpdateManyWithoutEventsParticipatingNestedInput
  responsibles: UserUncheckedUpdateManyWithoutEventsResponsibleNestedInput
  roomId: StringFieldUpdateOperationsInput
  shortDescription: StringFieldUpdateOperationsInput
  shortLinks: ShortLinkUncheckedUpdateManyWithoutEventNestedInput
  title: StringFieldUpdateOperationsInput
  userId: NullableStringFieldUpdateOperationsInput
}

input EventUncheckedUpdateManyInput {
  approved: BoolFieldUpdateOperationsInput
  date: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  roomId: StringFieldUpdateOperationsInput
  shortDescription: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  userId: NullableStringFieldUpdateOperationsInput
}

input EventUncheckedUpdateManyWithoutCategoriesNestedInput {
  connect: [EventWhereUniqueInput]
  connectOrCreate: [EventCreateOrConnectWithoutCategoriesInput]
  create: [EventCreateWithoutCategoriesInput]
  delete: [EventWhereUniqueInput]
  deleteMany: [EventScalarWhereInput]
  disconnect: [EventWhereUniqueInput]
  set: [EventWhereUniqueInput]
  update: [EventUpdateWithWhereUniqueWithoutCategoriesInput]
  updateMany: [EventUpdateManyWithWhereWithoutCategoriesInput]
  upsert: [EventUpsertWithWhereUniqueWithoutCategoriesInput]
}

input EventUncheckedUpdateManyWithoutEventsInput {
  approved: BoolFieldUpdateOperationsInput
  date: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  roomId: StringFieldUpdateOperationsInput
  shortDescription: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  userId: NullableStringFieldUpdateOperationsInput
}

input EventUncheckedUpdateManyWithoutEventsIssuedInput {
  approved: BoolFieldUpdateOperationsInput
  date: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  roomId: StringFieldUpdateOperationsInput
  shortDescription: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input EventUncheckedUpdateManyWithoutEventsParticipatingInput {
  approved: BoolFieldUpdateOperationsInput
  date: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  roomId: StringFieldUpdateOperationsInput
  shortDescription: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  userId: NullableStringFieldUpdateOperationsInput
}

input EventUncheckedUpdateManyWithoutEventsResponsibleInput {
  approved: BoolFieldUpdateOperationsInput
  date: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  roomId: StringFieldUpdateOperationsInput
  shortDescription: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  userId: NullableStringFieldUpdateOperationsInput
}

input EventUncheckedUpdateManyWithoutIssuedByNestedInput {
  connect: [EventWhereUniqueInput]
  connectOrCreate: [EventCreateOrConnectWithoutIssuedByInput]
  create: [EventCreateWithoutIssuedByInput]
  createMany: EventCreateManyIssuedByInputEnvelope
  delete: [EventWhereUniqueInput]
  deleteMany: [EventScalarWhereInput]
  disconnect: [EventWhereUniqueInput]
  set: [EventWhereUniqueInput]
  update: [EventUpdateWithWhereUniqueWithoutIssuedByInput]
  updateMany: [EventUpdateManyWithWhereWithoutIssuedByInput]
  upsert: [EventUpsertWithWhereUniqueWithoutIssuedByInput]
}

input EventUncheckedUpdateManyWithoutParticipantsNestedInput {
  connect: [EventWhereUniqueInput]
  connectOrCreate: [EventCreateOrConnectWithoutParticipantsInput]
  create: [EventCreateWithoutParticipantsInput]
  delete: [EventWhereUniqueInput]
  deleteMany: [EventScalarWhereInput]
  disconnect: [EventWhereUniqueInput]
  set: [EventWhereUniqueInput]
  update: [EventUpdateWithWhereUniqueWithoutParticipantsInput]
  updateMany: [EventUpdateManyWithWhereWithoutParticipantsInput]
  upsert: [EventUpsertWithWhereUniqueWithoutParticipantsInput]
}

input EventUncheckedUpdateManyWithoutResponsiblesNestedInput {
  connect: [EventWhereUniqueInput]
  connectOrCreate: [EventCreateOrConnectWithoutResponsiblesInput]
  create: [EventCreateWithoutResponsiblesInput]
  delete: [EventWhereUniqueInput]
  deleteMany: [EventScalarWhereInput]
  disconnect: [EventWhereUniqueInput]
  set: [EventWhereUniqueInput]
  update: [EventUpdateWithWhereUniqueWithoutResponsiblesInput]
  updateMany: [EventUpdateManyWithWhereWithoutResponsiblesInput]
  upsert: [EventUpsertWithWhereUniqueWithoutResponsiblesInput]
}

input EventUncheckedUpdateManyWithoutRoomNestedInput {
  connect: [EventWhereUniqueInput]
  connectOrCreate: [EventCreateOrConnectWithoutRoomInput]
  create: [EventCreateWithoutRoomInput]
  createMany: EventCreateManyRoomInputEnvelope
  delete: [EventWhereUniqueInput]
  deleteMany: [EventScalarWhereInput]
  disconnect: [EventWhereUniqueInput]
  set: [EventWhereUniqueInput]
  update: [EventUpdateWithWhereUniqueWithoutRoomInput]
  updateMany: [EventUpdateManyWithWhereWithoutRoomInput]
  upsert: [EventUpsertWithWhereUniqueWithoutRoomInput]
}

input EventUncheckedUpdateWithoutCategoriesInput {
  approved: BoolFieldUpdateOperationsInput
  chat: ChatUncheckedUpdateOneWithoutEventNestedInput
  date: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  participants: UserUncheckedUpdateManyWithoutEventsParticipatingNestedInput
  responsibles: UserUncheckedUpdateManyWithoutEventsResponsibleNestedInput
  roomId: StringFieldUpdateOperationsInput
  shortDescription: StringFieldUpdateOperationsInput
  shortLinks: ShortLinkUncheckedUpdateManyWithoutEventNestedInput
  title: StringFieldUpdateOperationsInput
  userId: NullableStringFieldUpdateOperationsInput
}

input EventUncheckedUpdateWithoutChatInput {
  approved: BoolFieldUpdateOperationsInput
  categories: CategoryUncheckedUpdateManyWithoutEventsNestedInput
  date: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  participants: UserUncheckedUpdateManyWithoutEventsParticipatingNestedInput
  responsibles: UserUncheckedUpdateManyWithoutEventsResponsibleNestedInput
  roomId: StringFieldUpdateOperationsInput
  shortDescription: StringFieldUpdateOperationsInput
  shortLinks: ShortLinkUncheckedUpdateManyWithoutEventNestedInput
  title: StringFieldUpdateOperationsInput
  userId: NullableStringFieldUpdateOperationsInput
}

input EventUncheckedUpdateWithoutIssuedByInput {
  approved: BoolFieldUpdateOperationsInput
  categories: CategoryUncheckedUpdateManyWithoutEventsNestedInput
  chat: ChatUncheckedUpdateOneWithoutEventNestedInput
  date: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  participants: UserUncheckedUpdateManyWithoutEventsParticipatingNestedInput
  responsibles: UserUncheckedUpdateManyWithoutEventsResponsibleNestedInput
  roomId: StringFieldUpdateOperationsInput
  shortDescription: StringFieldUpdateOperationsInput
  shortLinks: ShortLinkUncheckedUpdateManyWithoutEventNestedInput
  title: StringFieldUpdateOperationsInput
}

input EventUncheckedUpdateWithoutParticipantsInput {
  approved: BoolFieldUpdateOperationsInput
  categories: CategoryUncheckedUpdateManyWithoutEventsNestedInput
  chat: ChatUncheckedUpdateOneWithoutEventNestedInput
  date: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  responsibles: UserUncheckedUpdateManyWithoutEventsResponsibleNestedInput
  roomId: StringFieldUpdateOperationsInput
  shortDescription: StringFieldUpdateOperationsInput
  shortLinks: ShortLinkUncheckedUpdateManyWithoutEventNestedInput
  title: StringFieldUpdateOperationsInput
  userId: NullableStringFieldUpdateOperationsInput
}

input EventUncheckedUpdateWithoutResponsiblesInput {
  approved: BoolFieldUpdateOperationsInput
  categories: CategoryUncheckedUpdateManyWithoutEventsNestedInput
  chat: ChatUncheckedUpdateOneWithoutEventNestedInput
  date: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  participants: UserUncheckedUpdateManyWithoutEventsParticipatingNestedInput
  roomId: StringFieldUpdateOperationsInput
  shortDescription: StringFieldUpdateOperationsInput
  shortLinks: ShortLinkUncheckedUpdateManyWithoutEventNestedInput
  title: StringFieldUpdateOperationsInput
  userId: NullableStringFieldUpdateOperationsInput
}

input EventUncheckedUpdateWithoutRoomInput {
  approved: BoolFieldUpdateOperationsInput
  categories: CategoryUncheckedUpdateManyWithoutEventsNestedInput
  chat: ChatUncheckedUpdateOneWithoutEventNestedInput
  date: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  participants: UserUncheckedUpdateManyWithoutEventsParticipatingNestedInput
  responsibles: UserUncheckedUpdateManyWithoutEventsResponsibleNestedInput
  shortDescription: StringFieldUpdateOperationsInput
  shortLinks: ShortLinkUncheckedUpdateManyWithoutEventNestedInput
  title: StringFieldUpdateOperationsInput
  userId: NullableStringFieldUpdateOperationsInput
}

input EventUncheckedUpdateWithoutShortLinksInput {
  approved: BoolFieldUpdateOperationsInput
  categories: CategoryUncheckedUpdateManyWithoutEventsNestedInput
  chat: ChatUncheckedUpdateOneWithoutEventNestedInput
  date: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  participants: UserUncheckedUpdateManyWithoutEventsParticipatingNestedInput
  responsibles: UserUncheckedUpdateManyWithoutEventsResponsibleNestedInput
  roomId: StringFieldUpdateOperationsInput
  shortDescription: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  userId: NullableStringFieldUpdateOperationsInput
}

input EventUpdateInput {
  approved: BoolFieldUpdateOperationsInput
  categories: CategoryUpdateManyWithoutEventsNestedInput
  chat: ChatUpdateOneWithoutEventNestedInput
  date: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  issuedBy: UserUpdateOneWithoutEventsIssuedNestedInput
  participants: UserUpdateManyWithoutEventsParticipatingNestedInput
  responsibles: UserUpdateManyWithoutEventsResponsibleNestedInput
  room: RoomUpdateOneRequiredWithoutEventsNestedInput
  shortDescription: StringFieldUpdateOperationsInput
  shortLinks: ShortLinkUpdateManyWithoutEventNestedInput
  title: StringFieldUpdateOperationsInput
}

input EventUpdateManyMutationInput {
  approved: BoolFieldUpdateOperationsInput
  date: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  shortDescription: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input EventUpdateManyWithWhereWithoutCategoriesInput {
  data: EventUncheckedUpdateManyWithoutEventsInput!
  where: EventScalarWhereInput!
}

input EventUpdateManyWithWhereWithoutIssuedByInput {
  data: EventUncheckedUpdateManyWithoutEventsIssuedInput!
  where: EventScalarWhereInput!
}

input EventUpdateManyWithWhereWithoutParticipantsInput {
  data: EventUncheckedUpdateManyWithoutEventsParticipatingInput!
  where: EventScalarWhereInput!
}

input EventUpdateManyWithWhereWithoutResponsiblesInput {
  data: EventUncheckedUpdateManyWithoutEventsResponsibleInput!
  where: EventScalarWhereInput!
}

input EventUpdateManyWithWhereWithoutRoomInput {
  data: EventUncheckedUpdateManyWithoutEventsInput!
  where: EventScalarWhereInput!
}

input EventUpdateManyWithoutCategoriesNestedInput {
  connect: [EventWhereUniqueInput]
  connectOrCreate: [EventCreateOrConnectWithoutCategoriesInput]
  create: [EventCreateWithoutCategoriesInput]
  delete: [EventWhereUniqueInput]
  deleteMany: [EventScalarWhereInput]
  disconnect: [EventWhereUniqueInput]
  set: [EventWhereUniqueInput]
  update: [EventUpdateWithWhereUniqueWithoutCategoriesInput]
  updateMany: [EventUpdateManyWithWhereWithoutCategoriesInput]
  upsert: [EventUpsertWithWhereUniqueWithoutCategoriesInput]
}

input EventUpdateManyWithoutIssuedByNestedInput {
  connect: [EventWhereUniqueInput]
  connectOrCreate: [EventCreateOrConnectWithoutIssuedByInput]
  create: [EventCreateWithoutIssuedByInput]
  createMany: EventCreateManyIssuedByInputEnvelope
  delete: [EventWhereUniqueInput]
  deleteMany: [EventScalarWhereInput]
  disconnect: [EventWhereUniqueInput]
  set: [EventWhereUniqueInput]
  update: [EventUpdateWithWhereUniqueWithoutIssuedByInput]
  updateMany: [EventUpdateManyWithWhereWithoutIssuedByInput]
  upsert: [EventUpsertWithWhereUniqueWithoutIssuedByInput]
}

input EventUpdateManyWithoutParticipantsNestedInput {
  connect: [EventWhereUniqueInput]
  connectOrCreate: [EventCreateOrConnectWithoutParticipantsInput]
  create: [EventCreateWithoutParticipantsInput]
  delete: [EventWhereUniqueInput]
  deleteMany: [EventScalarWhereInput]
  disconnect: [EventWhereUniqueInput]
  set: [EventWhereUniqueInput]
  update: [EventUpdateWithWhereUniqueWithoutParticipantsInput]
  updateMany: [EventUpdateManyWithWhereWithoutParticipantsInput]
  upsert: [EventUpsertWithWhereUniqueWithoutParticipantsInput]
}

input EventUpdateManyWithoutResponsiblesNestedInput {
  connect: [EventWhereUniqueInput]
  connectOrCreate: [EventCreateOrConnectWithoutResponsiblesInput]
  create: [EventCreateWithoutResponsiblesInput]
  delete: [EventWhereUniqueInput]
  deleteMany: [EventScalarWhereInput]
  disconnect: [EventWhereUniqueInput]
  set: [EventWhereUniqueInput]
  update: [EventUpdateWithWhereUniqueWithoutResponsiblesInput]
  updateMany: [EventUpdateManyWithWhereWithoutResponsiblesInput]
  upsert: [EventUpsertWithWhereUniqueWithoutResponsiblesInput]
}

input EventUpdateManyWithoutRoomNestedInput {
  connect: [EventWhereUniqueInput]
  connectOrCreate: [EventCreateOrConnectWithoutRoomInput]
  create: [EventCreateWithoutRoomInput]
  createMany: EventCreateManyRoomInputEnvelope
  delete: [EventWhereUniqueInput]
  deleteMany: [EventScalarWhereInput]
  disconnect: [EventWhereUniqueInput]
  set: [EventWhereUniqueInput]
  update: [EventUpdateWithWhereUniqueWithoutRoomInput]
  updateMany: [EventUpdateManyWithWhereWithoutRoomInput]
  upsert: [EventUpsertWithWhereUniqueWithoutRoomInput]
}

input EventUpdateOneRequiredWithoutChatNestedInput {
  connect: EventWhereUniqueInput
  connectOrCreate: EventCreateOrConnectWithoutChatInput
  create: EventUncheckedCreateWithoutChatInput
  update: EventUncheckedUpdateWithoutChatInput
  upsert: EventUpsertWithoutChatInput
}

input EventUpdateOneRequiredWithoutShortLinksNestedInput {
  connect: EventWhereUniqueInput
  connectOrCreate: EventCreateOrConnectWithoutShortLinksInput
  create: EventUncheckedCreateWithoutShortLinksInput
  update: EventUncheckedUpdateWithoutShortLinksInput
  upsert: EventUpsertWithoutShortLinksInput
}

input EventUpdateWithWhereUniqueWithoutCategoriesInput {
  data: EventUncheckedUpdateWithoutCategoriesInput!
  where: EventWhereUniqueInput!
}

input EventUpdateWithWhereUniqueWithoutIssuedByInput {
  data: EventUncheckedUpdateWithoutIssuedByInput!
  where: EventWhereUniqueInput!
}

input EventUpdateWithWhereUniqueWithoutParticipantsInput {
  data: EventUncheckedUpdateWithoutParticipantsInput!
  where: EventWhereUniqueInput!
}

input EventUpdateWithWhereUniqueWithoutResponsiblesInput {
  data: EventUncheckedUpdateWithoutResponsiblesInput!
  where: EventWhereUniqueInput!
}

input EventUpdateWithWhereUniqueWithoutRoomInput {
  data: EventUncheckedUpdateWithoutRoomInput!
  where: EventWhereUniqueInput!
}

input EventUpdateWithoutCategoriesInput {
  approved: BoolFieldUpdateOperationsInput
  chat: ChatUpdateOneWithoutEventNestedInput
  date: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  issuedBy: UserUpdateOneWithoutEventsIssuedNestedInput
  participants: UserUpdateManyWithoutEventsParticipatingNestedInput
  responsibles: UserUpdateManyWithoutEventsResponsibleNestedInput
  room: RoomUpdateOneRequiredWithoutEventsNestedInput
  shortDescription: StringFieldUpdateOperationsInput
  shortLinks: ShortLinkUpdateManyWithoutEventNestedInput
  title: StringFieldUpdateOperationsInput
}

input EventUpdateWithoutChatInput {
  approved: BoolFieldUpdateOperationsInput
  categories: CategoryUpdateManyWithoutEventsNestedInput
  date: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  issuedBy: UserUpdateOneWithoutEventsIssuedNestedInput
  participants: UserUpdateManyWithoutEventsParticipatingNestedInput
  responsibles: UserUpdateManyWithoutEventsResponsibleNestedInput
  room: RoomUpdateOneRequiredWithoutEventsNestedInput
  shortDescription: StringFieldUpdateOperationsInput
  shortLinks: ShortLinkUpdateManyWithoutEventNestedInput
  title: StringFieldUpdateOperationsInput
}

input EventUpdateWithoutIssuedByInput {
  approved: BoolFieldUpdateOperationsInput
  categories: CategoryUpdateManyWithoutEventsNestedInput
  chat: ChatUpdateOneWithoutEventNestedInput
  date: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  participants: UserUpdateManyWithoutEventsParticipatingNestedInput
  responsibles: UserUpdateManyWithoutEventsResponsibleNestedInput
  room: RoomUpdateOneRequiredWithoutEventsNestedInput
  shortDescription: StringFieldUpdateOperationsInput
  shortLinks: ShortLinkUpdateManyWithoutEventNestedInput
  title: StringFieldUpdateOperationsInput
}

input EventUpdateWithoutParticipantsInput {
  approved: BoolFieldUpdateOperationsInput
  categories: CategoryUpdateManyWithoutEventsNestedInput
  chat: ChatUpdateOneWithoutEventNestedInput
  date: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  issuedBy: UserUpdateOneWithoutEventsIssuedNestedInput
  responsibles: UserUpdateManyWithoutEventsResponsibleNestedInput
  room: RoomUpdateOneRequiredWithoutEventsNestedInput
  shortDescription: StringFieldUpdateOperationsInput
  shortLinks: ShortLinkUpdateManyWithoutEventNestedInput
  title: StringFieldUpdateOperationsInput
}

input EventUpdateWithoutResponsiblesInput {
  approved: BoolFieldUpdateOperationsInput
  categories: CategoryUpdateManyWithoutEventsNestedInput
  chat: ChatUpdateOneWithoutEventNestedInput
  date: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  issuedBy: UserUpdateOneWithoutEventsIssuedNestedInput
  participants: UserUpdateManyWithoutEventsParticipatingNestedInput
  room: RoomUpdateOneRequiredWithoutEventsNestedInput
  shortDescription: StringFieldUpdateOperationsInput
  shortLinks: ShortLinkUpdateManyWithoutEventNestedInput
  title: StringFieldUpdateOperationsInput
}

input EventUpdateWithoutRoomInput {
  approved: BoolFieldUpdateOperationsInput
  categories: CategoryUpdateManyWithoutEventsNestedInput
  chat: ChatUpdateOneWithoutEventNestedInput
  date: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  issuedBy: UserUpdateOneWithoutEventsIssuedNestedInput
  participants: UserUpdateManyWithoutEventsParticipatingNestedInput
  responsibles: UserUpdateManyWithoutEventsResponsibleNestedInput
  shortDescription: StringFieldUpdateOperationsInput
  shortLinks: ShortLinkUpdateManyWithoutEventNestedInput
  title: StringFieldUpdateOperationsInput
}

input EventUpdateWithoutShortLinksInput {
  approved: BoolFieldUpdateOperationsInput
  categories: CategoryUpdateManyWithoutEventsNestedInput
  chat: ChatUpdateOneWithoutEventNestedInput
  date: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  issuedBy: UserUpdateOneWithoutEventsIssuedNestedInput
  participants: UserUpdateManyWithoutEventsParticipatingNestedInput
  responsibles: UserUpdateManyWithoutEventsResponsibleNestedInput
  room: RoomUpdateOneRequiredWithoutEventsNestedInput
  shortDescription: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input EventUpsertWithWhereUniqueWithoutCategoriesInput {
  create: EventUncheckedCreateWithoutCategoriesInput!
  update: EventUncheckedUpdateWithoutCategoriesInput!
  where: EventWhereUniqueInput!
}

input EventUpsertWithWhereUniqueWithoutIssuedByInput {
  create: EventUncheckedCreateWithoutIssuedByInput!
  update: EventUncheckedUpdateWithoutIssuedByInput!
  where: EventWhereUniqueInput!
}

input EventUpsertWithWhereUniqueWithoutParticipantsInput {
  create: EventUncheckedCreateWithoutParticipantsInput!
  update: EventUncheckedUpdateWithoutParticipantsInput!
  where: EventWhereUniqueInput!
}

input EventUpsertWithWhereUniqueWithoutResponsiblesInput {
  create: EventUncheckedCreateWithoutResponsiblesInput!
  update: EventUncheckedUpdateWithoutResponsiblesInput!
  where: EventWhereUniqueInput!
}

input EventUpsertWithWhereUniqueWithoutRoomInput {
  create: EventUncheckedCreateWithoutRoomInput!
  update: EventUncheckedUpdateWithoutRoomInput!
  where: EventWhereUniqueInput!
}

input EventUpsertWithoutChatInput {
  create: EventUncheckedCreateWithoutChatInput!
  update: EventUncheckedUpdateWithoutChatInput!
}

input EventUpsertWithoutShortLinksInput {
  create: EventUncheckedCreateWithoutShortLinksInput!
  update: EventUncheckedUpdateWithoutShortLinksInput!
}

input EventWhereInput {
  AND: [EventWhereInput]
  NOT: [EventWhereInput]
  OR: [EventWhereInput]
  approved: BoolFilter
  categories: CategoryListRelationFilter
  chat: ChatWhereInput
  date: DateTimeFilter
  description: StringFilter
  id: StringFilter
  image: StringNullableFilter
  issuedBy: UserWhereInput
  participants: UserListRelationFilter
  responsibles: UserListRelationFilter
  room: RoomWhereInput
  roomId: StringFilter
  shortDescription: StringFilter
  shortLinks: ShortLinkListRelationFilter
  title: StringFilter
  userId: StringNullableFilter
}

input EventWhereUniqueInput {
  id: String
}

input IntFieldUpdateOperationsInput {
  decrement: Int
  divide: Int
  increment: Int
  multiply: Int
  set: Int
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int]
}

input IntWithAggregatesFilter {
  _avg: NestedFloatFilter
  _count: NestedIntFilter
  _max: NestedIntFilter
  _min: NestedIntFilter
  _sum: NestedIntFilter
  equals: Int
  gt: Int
  gte: Int
  in: [Int]
  lt: Int
  lte: Int
  not: NestedIntWithAggregatesFilter
  notIn: [Int]
}

input IssueEventInput {
  approved: Boolean
  categories: CategoryCreateNestedManyWithoutEventsInput
  chat: ChatCreateNestedOneWithoutEventInput
  date: DateTime!
  description: String!
  id: String
  image: String
  participants: UserCreateNestedManyWithoutEventsParticipatingInput
  responsibles: UserCreateNestedManyWithoutEventsResponsibleInput
  room: RoomCreateNestedOneWithoutEventsInput!
  shortDescription: String!
  title: String!
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar Json @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type Message {
  chat: Chat!
  chatId: String!
  id: String!
  message: String!
  sender: User!
  sentDate: DateTime!
  userId: String!
}

type MessageCountAggregateOutputType {
  _all: Int!
  chatId: Int!
  id: Int!
  message: Int!
  sentDate: Int!
  userId: Int!
}

input MessageCountOrderByAggregateInput {
  chatId: SortOrder
  id: SortOrder
  message: SortOrder
  sentDate: SortOrder
  userId: SortOrder
}

input MessageCreateInput {
  chat: ChatCreateNestedOneWithoutMessagesInput!
  id: String
  message: String!
  sender: UserCreateNestedOneWithoutMessagesInput!
  sentDate: DateTime
}

input MessageCreateManyChatInput {
  id: String
  message: String!
  sentDate: DateTime
  userId: String!
}

input MessageCreateManyChatInputEnvelope {
  data: MessageCreateManyChatInput!
  skipDuplicates: Boolean
}

input MessageCreateManyInput {
  chatId: String!
  id: String
  message: String!
  sentDate: DateTime
  userId: String!
}

input MessageCreateManySenderInput {
  chatId: String!
  id: String
  message: String!
  sentDate: DateTime
}

input MessageCreateManySenderInputEnvelope {
  data: MessageCreateManySenderInput!
  skipDuplicates: Boolean
}

input MessageCreateNestedManyWithoutChatInput {
  connect: [MessageWhereUniqueInput]
  connectOrCreate: [MessageCreateOrConnectWithoutChatInput]
  create: [MessageCreateWithoutChatInput]
  createMany: MessageCreateManyChatInputEnvelope
}

input MessageCreateNestedManyWithoutSenderInput {
  connect: [MessageWhereUniqueInput]
  connectOrCreate: [MessageCreateOrConnectWithoutSenderInput]
  create: [MessageCreateWithoutSenderInput]
  createMany: MessageCreateManySenderInputEnvelope
}

input MessageCreateOrConnectWithoutChatInput {
  create: MessageUncheckedCreateWithoutChatInput!
  where: MessageWhereUniqueInput!
}

input MessageCreateOrConnectWithoutSenderInput {
  create: MessageUncheckedCreateWithoutSenderInput!
  where: MessageWhereUniqueInput!
}

input MessageCreateWithoutChatInput {
  id: String
  message: String!
  sender: UserCreateNestedOneWithoutMessagesInput!
  sentDate: DateTime
}

input MessageCreateWithoutSenderInput {
  chat: ChatCreateNestedOneWithoutMessagesInput!
  id: String
  message: String!
  sentDate: DateTime
}

input MessageListRelationFilter {
  every: MessageWhereInput
  none: MessageWhereInput
  some: MessageWhereInput
}

type MessageMaxAggregateOutputType {
  chatId: String
  id: String
  message: String
  sentDate: DateTime
  userId: String
}

input MessageMaxOrderByAggregateInput {
  chatId: SortOrder
  id: SortOrder
  message: SortOrder
  sentDate: SortOrder
  userId: SortOrder
}

type MessageMinAggregateOutputType {
  chatId: String
  id: String
  message: String
  sentDate: DateTime
  userId: String
}

input MessageMinOrderByAggregateInput {
  chatId: SortOrder
  id: SortOrder
  message: SortOrder
  sentDate: SortOrder
  userId: SortOrder
}

input MessageOrderByRelationAggregateInput {
  _count: SortOrder
}

input MessageOrderByWithAggregationInput {
  _count: MessageCountOrderByAggregateInput
  _max: MessageMaxOrderByAggregateInput
  _min: MessageMinOrderByAggregateInput
  chatId: SortOrder
  id: SortOrder
  message: SortOrder
  sentDate: SortOrder
  userId: SortOrder
}

input MessageOrderByWithRelationInput {
  chat: ChatOrderByWithRelationInput
  chatId: SortOrder
  id: SortOrder
  message: SortOrder
  sender: UserOrderByWithRelationInput
  sentDate: SortOrder
  userId: SortOrder
}

enum MessageScalarFieldEnum {
  chatId
  id
  message
  sentDate
  userId
}

input MessageScalarWhereInput {
  AND: [MessageScalarWhereInput]
  NOT: [MessageScalarWhereInput]
  OR: [MessageScalarWhereInput]
  chatId: StringFilter
  id: StringFilter
  message: StringFilter
  sentDate: DateTimeFilter
  userId: StringFilter
}

input MessageScalarWhereWithAggregatesInput {
  AND: [MessageScalarWhereWithAggregatesInput]
  NOT: [MessageScalarWhereWithAggregatesInput]
  OR: [MessageScalarWhereWithAggregatesInput]
  chatId: StringWithAggregatesFilter
  id: StringWithAggregatesFilter
  message: StringWithAggregatesFilter
  sentDate: DateTimeWithAggregatesFilter
  userId: StringWithAggregatesFilter
}

input MessageUncheckedCreateInput {
  chatId: String!
  id: String
  message: String!
  sentDate: DateTime
  userId: String!
}

input MessageUncheckedCreateNestedManyWithoutChatInput {
  connect: [MessageWhereUniqueInput]
  connectOrCreate: [MessageCreateOrConnectWithoutChatInput]
  create: [MessageCreateWithoutChatInput]
  createMany: MessageCreateManyChatInputEnvelope
}

input MessageUncheckedCreateNestedManyWithoutSenderInput {
  connect: [MessageWhereUniqueInput]
  connectOrCreate: [MessageCreateOrConnectWithoutSenderInput]
  create: [MessageCreateWithoutSenderInput]
  createMany: MessageCreateManySenderInputEnvelope
}

input MessageUncheckedCreateWithoutChatInput {
  id: String
  message: String!
  sentDate: DateTime
  userId: String!
}

input MessageUncheckedCreateWithoutSenderInput {
  chatId: String!
  id: String
  message: String!
  sentDate: DateTime
}

input MessageUncheckedUpdateInput {
  chatId: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  message: StringFieldUpdateOperationsInput
  sentDate: DateTimeFieldUpdateOperationsInput
  userId: StringFieldUpdateOperationsInput
}

input MessageUncheckedUpdateManyInput {
  chatId: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  message: StringFieldUpdateOperationsInput
  sentDate: DateTimeFieldUpdateOperationsInput
  userId: StringFieldUpdateOperationsInput
}

input MessageUncheckedUpdateManyWithoutChatNestedInput {
  connect: [MessageWhereUniqueInput]
  connectOrCreate: [MessageCreateOrConnectWithoutChatInput]
  create: [MessageCreateWithoutChatInput]
  createMany: MessageCreateManyChatInputEnvelope
  delete: [MessageWhereUniqueInput]
  deleteMany: [MessageScalarWhereInput]
  disconnect: [MessageWhereUniqueInput]
  set: [MessageWhereUniqueInput]
  update: [MessageUpdateWithWhereUniqueWithoutChatInput]
  updateMany: [MessageUpdateManyWithWhereWithoutChatInput]
  upsert: [MessageUpsertWithWhereUniqueWithoutChatInput]
}

input MessageUncheckedUpdateManyWithoutMessagesInput {
  id: StringFieldUpdateOperationsInput
  message: StringFieldUpdateOperationsInput
  sentDate: DateTimeFieldUpdateOperationsInput
  userId: StringFieldUpdateOperationsInput
}

input MessageUncheckedUpdateManyWithoutSenderNestedInput {
  connect: [MessageWhereUniqueInput]
  connectOrCreate: [MessageCreateOrConnectWithoutSenderInput]
  create: [MessageCreateWithoutSenderInput]
  createMany: MessageCreateManySenderInputEnvelope
  delete: [MessageWhereUniqueInput]
  deleteMany: [MessageScalarWhereInput]
  disconnect: [MessageWhereUniqueInput]
  set: [MessageWhereUniqueInput]
  update: [MessageUpdateWithWhereUniqueWithoutSenderInput]
  updateMany: [MessageUpdateManyWithWhereWithoutSenderInput]
  upsert: [MessageUpsertWithWhereUniqueWithoutSenderInput]
}

input MessageUncheckedUpdateWithoutChatInput {
  id: StringFieldUpdateOperationsInput
  message: StringFieldUpdateOperationsInput
  sentDate: DateTimeFieldUpdateOperationsInput
  userId: StringFieldUpdateOperationsInput
}

input MessageUncheckedUpdateWithoutSenderInput {
  chatId: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  message: StringFieldUpdateOperationsInput
  sentDate: DateTimeFieldUpdateOperationsInput
}

input MessageUpdateInput {
  chat: ChatUpdateOneRequiredWithoutMessagesNestedInput
  id: StringFieldUpdateOperationsInput
  message: StringFieldUpdateOperationsInput
  sender: UserUpdateOneRequiredWithoutMessagesNestedInput
  sentDate: DateTimeFieldUpdateOperationsInput
}

input MessageUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  message: StringFieldUpdateOperationsInput
  sentDate: DateTimeFieldUpdateOperationsInput
}

input MessageUpdateManyWithWhereWithoutChatInput {
  data: MessageUncheckedUpdateManyWithoutMessagesInput!
  where: MessageScalarWhereInput!
}

input MessageUpdateManyWithWhereWithoutSenderInput {
  data: MessageUncheckedUpdateManyWithoutMessagesInput!
  where: MessageScalarWhereInput!
}

input MessageUpdateManyWithoutChatNestedInput {
  connect: [MessageWhereUniqueInput]
  connectOrCreate: [MessageCreateOrConnectWithoutChatInput]
  create: [MessageCreateWithoutChatInput]
  createMany: MessageCreateManyChatInputEnvelope
  delete: [MessageWhereUniqueInput]
  deleteMany: [MessageScalarWhereInput]
  disconnect: [MessageWhereUniqueInput]
  set: [MessageWhereUniqueInput]
  update: [MessageUpdateWithWhereUniqueWithoutChatInput]
  updateMany: [MessageUpdateManyWithWhereWithoutChatInput]
  upsert: [MessageUpsertWithWhereUniqueWithoutChatInput]
}

input MessageUpdateManyWithoutSenderNestedInput {
  connect: [MessageWhereUniqueInput]
  connectOrCreate: [MessageCreateOrConnectWithoutSenderInput]
  create: [MessageCreateWithoutSenderInput]
  createMany: MessageCreateManySenderInputEnvelope
  delete: [MessageWhereUniqueInput]
  deleteMany: [MessageScalarWhereInput]
  disconnect: [MessageWhereUniqueInput]
  set: [MessageWhereUniqueInput]
  update: [MessageUpdateWithWhereUniqueWithoutSenderInput]
  updateMany: [MessageUpdateManyWithWhereWithoutSenderInput]
  upsert: [MessageUpsertWithWhereUniqueWithoutSenderInput]
}

input MessageUpdateWithWhereUniqueWithoutChatInput {
  data: MessageUncheckedUpdateWithoutChatInput!
  where: MessageWhereUniqueInput!
}

input MessageUpdateWithWhereUniqueWithoutSenderInput {
  data: MessageUncheckedUpdateWithoutSenderInput!
  where: MessageWhereUniqueInput!
}

input MessageUpdateWithoutChatInput {
  id: StringFieldUpdateOperationsInput
  message: StringFieldUpdateOperationsInput
  sender: UserUpdateOneRequiredWithoutMessagesNestedInput
  sentDate: DateTimeFieldUpdateOperationsInput
}

input MessageUpdateWithoutSenderInput {
  chat: ChatUpdateOneRequiredWithoutMessagesNestedInput
  id: StringFieldUpdateOperationsInput
  message: StringFieldUpdateOperationsInput
  sentDate: DateTimeFieldUpdateOperationsInput
}

input MessageUpsertWithWhereUniqueWithoutChatInput {
  create: MessageUncheckedCreateWithoutChatInput!
  update: MessageUncheckedUpdateWithoutChatInput!
  where: MessageWhereUniqueInput!
}

input MessageUpsertWithWhereUniqueWithoutSenderInput {
  create: MessageUncheckedCreateWithoutSenderInput!
  update: MessageUncheckedUpdateWithoutSenderInput!
  where: MessageWhereUniqueInput!
}

input MessageWhereInput {
  AND: [MessageWhereInput]
  NOT: [MessageWhereInput]
  OR: [MessageWhereInput]
  chat: ChatWhereInput
  chatId: StringFilter
  id: StringFilter
  message: StringFilter
  sender: UserWhereInput
  sentDate: DateTimeFilter
  userId: StringFilter
}

input MessageWhereUniqueInput {
  id: String
}

type Mutation {
  approveEvent(eventId: String!): Event!
  createOneCategory(data: CategoryCreateInput!): Category!
  createOneChat(data: ChatCreateInput!): Chat!
  createOneEvent(data: EventCreateInput!): Event!
  createOneMessage(data: MessageCreateInput!): Message!
  createOneProfile(data: ProfileCreateInput!): Profile!
  createOneRoom(data: RoomCreateInput!): Room!
  createOneShortLink(data: ShortLinkCreateInput!): ShortLink!
  createOneUser(data: UserCreateInput!): User!
  deleteManyCategory(where: CategoryWhereInput): BatchPayload!
  deleteManyChat(where: ChatWhereInput): BatchPayload!
  deleteManyEvent(where: EventWhereInput): BatchPayload!
  deleteManyMessage(where: MessageWhereInput): BatchPayload!
  deleteManyProfile(where: ProfileWhereInput): BatchPayload!
  deleteManyRoom(where: RoomWhereInput): BatchPayload!
  deleteManyShortLink(where: ShortLinkWhereInput): BatchPayload!
  deleteManyUser(where: UserWhereInput): BatchPayload!
  deleteOneCategory(where: CategoryWhereUniqueInput!): Category
  deleteOneChat(where: ChatWhereUniqueInput!): Chat
  deleteOneEvent(where: EventWhereUniqueInput!): Event
  deleteOneMessage(where: MessageWhereUniqueInput!): Message
  deleteOneProfile(where: ProfileWhereUniqueInput!): Profile
  deleteOneRoom(where: RoomWhereUniqueInput!): Room
  deleteOneShortLink(where: ShortLinkWhereUniqueInput!): ShortLink
  deleteOneUser(where: UserWhereUniqueInput!): User
  generateShortLink(eventId: String!): String!
  issueEvent(data: IssueEventInput!): Event!
  login(data: SignInInput!): UserAndToken!
  registerForEvent(eventId: String!): Event!
  sendMessage(data: SendMessageInput!): Message!
  signup(data: SignUpInput!): UserAndToken!
  unsignFromEvent(eventId: String!): Event!
  updateManyCategory(data: CategoryUpdateManyMutationInput!, where: CategoryWhereInput): BatchPayload!
  updateManyChat(data: ChatUpdateManyMutationInput!, where: ChatWhereInput): BatchPayload!
  updateManyEvent(data: EventUpdateManyMutationInput!, where: EventWhereInput): BatchPayload!
  updateManyMessage(data: MessageUpdateManyMutationInput!, where: MessageWhereInput): BatchPayload!
  updateManyProfile(data: ProfileUpdateManyMutationInput!, where: ProfileWhereInput): BatchPayload!
  updateManyRoom(data: RoomUpdateManyMutationInput!, where: RoomWhereInput): BatchPayload!
  updateManyUser(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!
  updateMyProfile(data: UpdateMyProfileInput!): Profile!
  updateOneCategory(data: CategoryUpdateInput!, where: CategoryWhereUniqueInput!): Category!
  updateOneChat(data: ChatUpdateInput!, where: ChatWhereUniqueInput!): Chat!
  updateOneEvent(data: EventUpdateInput!, where: EventWhereUniqueInput!): Event!
  updateOneMessage(data: MessageUpdateInput!, where: MessageWhereUniqueInput!): Message!
  updateOneProfile(data: ProfileUpdateInput!, where: ProfileWhereUniqueInput!): Profile!
  updateOneRoom(data: RoomUpdateInput!, where: RoomWhereUniqueInput!): Room!
  updateOneShortLink(data: ShortLinkUpdateInput!, where: ShortLinkWhereUniqueInput!): ShortLink!
  updateOneUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User!
  upsertOneCategory(create: CategoryCreateInput!, update: CategoryUpdateInput!, where: CategoryWhereUniqueInput!): Category!
  upsertOneChat(create: ChatCreateInput!, update: ChatUpdateInput!, where: ChatWhereUniqueInput!): Chat!
  upsertOneEvent(create: EventCreateInput!, update: EventUpdateInput!, where: EventWhereUniqueInput!): Event!
  upsertOneMessage(create: MessageCreateInput!, update: MessageUpdateInput!, where: MessageWhereUniqueInput!): Message!
  upsertOneProfile(create: ProfileCreateInput!, update: ProfileUpdateInput!, where: ProfileWhereUniqueInput!): Profile!
  upsertOneRoom(create: RoomCreateInput!, update: RoomUpdateInput!, where: RoomWhereUniqueInput!): Room!
  upsertOneShortLink(create: ShortLinkCreateInput!, update: ShortLinkUpdateInput!, where: ShortLinkWhereUniqueInput!): ShortLink!
  upsertOneUser(create: UserCreateInput!, update: UserUpdateInput!, where: UserWhereUniqueInput!): User!
}

input NestedBoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input NestedBoolWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedBoolFilter
  _min: NestedBoolFilter
  equals: Boolean
  not: NestedBoolWithAggregatesFilter
}

input NestedDateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime]
}

input NestedDateTimeWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedDateTimeFilter
  _min: NestedDateTimeFilter
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeWithAggregatesFilter
  notIn: [DateTime]
}

input NestedEnumUserRoleFilter {
  equals: UserRole
  in: [UserRole]
  not: NestedEnumUserRoleFilter
  notIn: [UserRole]
}

input NestedEnumUserRoleWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumUserRoleFilter
  _min: NestedEnumUserRoleFilter
  equals: UserRole
  in: [UserRole]
  not: NestedEnumUserRoleWithAggregatesFilter
  notIn: [UserRole]
}

input NestedFloatFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  not: NestedFloatFilter
  notIn: [Float]
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int]
}

input NestedIntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int]
}

input NestedIntWithAggregatesFilter {
  _avg: NestedFloatFilter
  _count: NestedIntFilter
  _max: NestedIntFilter
  _min: NestedIntFilter
  _sum: NestedIntFilter
  equals: Int
  gt: Int
  gte: Int
  in: [Int]
  lt: Int
  lte: Int
  not: NestedIntWithAggregatesFilter
  notIn: [Int]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String]
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String]
  startsWith: String
}

input NestedStringNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedStringNullableFilter
  _min: NestedStringNullableFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  not: NestedStringNullableWithAggregatesFilter
  notIn: [String]
  startsWith: String
}

input NestedStringWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedStringFilter
  _min: NestedStringFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  not: NestedStringWithAggregatesFilter
  notIn: [String]
  startsWith: String
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}

type Profile {
  avatar: String
  bio: String
  id: String!
  jobTitle: String
  name: String
  surname: String
  updatedAt: DateTime!
  user: User!
  userId: String!
}

type ProfileCountAggregateOutputType {
  _all: Int!
  avatar: Int!
  bio: Int!
  id: Int!
  jobTitle: Int!
  name: Int!
  surname: Int!
  updatedAt: Int!
  userId: Int!
}

input ProfileCountOrderByAggregateInput {
  avatar: SortOrder
  bio: SortOrder
  id: SortOrder
  jobTitle: SortOrder
  name: SortOrder
  surname: SortOrder
  updatedAt: SortOrder
  userId: SortOrder
}

input ProfileCreateInput {
  avatar: String
  bio: String
  id: String
  jobTitle: String
  name: String
  surname: String
  updatedAt: DateTime
  user: UserCreateNestedOneWithoutProfileInput!
}

input ProfileCreateManyInput {
  avatar: String
  bio: String
  id: String
  jobTitle: String
  name: String
  surname: String
  updatedAt: DateTime
  userId: String!
}

input ProfileCreateNestedOneWithoutUserInput {
  connect: ProfileWhereUniqueInput
  connectOrCreate: ProfileCreateOrConnectWithoutUserInput
  create: ProfileUncheckedCreateWithoutUserInput
}

input ProfileCreateOrConnectWithoutUserInput {
  create: ProfileUncheckedCreateWithoutUserInput!
  where: ProfileWhereUniqueInput!
}

input ProfileCreateWithoutUserInput {
  avatar: String
  bio: String
  id: String
  jobTitle: String
  name: String
  surname: String
  updatedAt: DateTime
}

type ProfileMaxAggregateOutputType {
  avatar: String
  bio: String
  id: String
  jobTitle: String
  name: String
  surname: String
  updatedAt: DateTime
  userId: String
}

input ProfileMaxOrderByAggregateInput {
  avatar: SortOrder
  bio: SortOrder
  id: SortOrder
  jobTitle: SortOrder
  name: SortOrder
  surname: SortOrder
  updatedAt: SortOrder
  userId: SortOrder
}

type ProfileMinAggregateOutputType {
  avatar: String
  bio: String
  id: String
  jobTitle: String
  name: String
  surname: String
  updatedAt: DateTime
  userId: String
}

input ProfileMinOrderByAggregateInput {
  avatar: SortOrder
  bio: SortOrder
  id: SortOrder
  jobTitle: SortOrder
  name: SortOrder
  surname: SortOrder
  updatedAt: SortOrder
  userId: SortOrder
}

input ProfileOrderByWithAggregationInput {
  _count: ProfileCountOrderByAggregateInput
  _max: ProfileMaxOrderByAggregateInput
  _min: ProfileMinOrderByAggregateInput
  avatar: SortOrder
  bio: SortOrder
  id: SortOrder
  jobTitle: SortOrder
  name: SortOrder
  surname: SortOrder
  updatedAt: SortOrder
  userId: SortOrder
}

input ProfileOrderByWithRelationInput {
  avatar: SortOrder
  bio: SortOrder
  id: SortOrder
  jobTitle: SortOrder
  name: SortOrder
  surname: SortOrder
  updatedAt: SortOrder
  user: UserOrderByWithRelationInput
  userId: SortOrder
}

input ProfileRelationFilter {
  is: ProfileWhereInput
  isNot: ProfileWhereInput
}

enum ProfileScalarFieldEnum {
  avatar
  bio
  id
  jobTitle
  name
  surname
  updatedAt
  userId
}

input ProfileScalarWhereWithAggregatesInput {
  AND: [ProfileScalarWhereWithAggregatesInput]
  NOT: [ProfileScalarWhereWithAggregatesInput]
  OR: [ProfileScalarWhereWithAggregatesInput]
  avatar: StringNullableWithAggregatesFilter
  bio: StringNullableWithAggregatesFilter
  id: StringWithAggregatesFilter
  jobTitle: StringNullableWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  surname: StringNullableWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
  userId: StringWithAggregatesFilter
}

input ProfileUncheckedCreateInput {
  avatar: String
  bio: String
  id: String
  jobTitle: String
  name: String
  surname: String
  updatedAt: DateTime
  userId: String!
}

input ProfileUncheckedCreateNestedOneWithoutUserInput {
  connect: ProfileWhereUniqueInput
  connectOrCreate: ProfileCreateOrConnectWithoutUserInput
  create: ProfileUncheckedCreateWithoutUserInput
}

input ProfileUncheckedCreateWithoutUserInput {
  avatar: String
  bio: String
  id: String
  jobTitle: String
  name: String
  surname: String
  updatedAt: DateTime
}

input ProfileUncheckedUpdateInput {
  avatar: NullableStringFieldUpdateOperationsInput
  bio: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  jobTitle: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  surname: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  userId: StringFieldUpdateOperationsInput
}

input ProfileUncheckedUpdateManyInput {
  avatar: NullableStringFieldUpdateOperationsInput
  bio: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  jobTitle: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  surname: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  userId: StringFieldUpdateOperationsInput
}

input ProfileUncheckedUpdateOneWithoutUserNestedInput {
  connect: ProfileWhereUniqueInput
  connectOrCreate: ProfileCreateOrConnectWithoutUserInput
  create: ProfileUncheckedCreateWithoutUserInput
  delete: Boolean
  disconnect: Boolean
  update: ProfileUncheckedUpdateWithoutUserInput
  upsert: ProfileUpsertWithoutUserInput
}

input ProfileUncheckedUpdateWithoutUserInput {
  avatar: NullableStringFieldUpdateOperationsInput
  bio: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  jobTitle: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  surname: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ProfileUpdateInput {
  avatar: NullableStringFieldUpdateOperationsInput
  bio: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  jobTitle: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  surname: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutProfileNestedInput
}

input ProfileUpdateManyMutationInput {
  avatar: NullableStringFieldUpdateOperationsInput
  bio: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  jobTitle: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  surname: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ProfileUpdateOneWithoutUserNestedInput {
  connect: ProfileWhereUniqueInput
  connectOrCreate: ProfileCreateOrConnectWithoutUserInput
  create: ProfileUncheckedCreateWithoutUserInput
  delete: Boolean
  disconnect: Boolean
  update: ProfileUncheckedUpdateWithoutUserInput
  upsert: ProfileUpsertWithoutUserInput
}

input ProfileUpdateWithoutUserInput {
  avatar: NullableStringFieldUpdateOperationsInput
  bio: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  jobTitle: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  surname: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ProfileUpsertWithoutUserInput {
  create: ProfileUncheckedCreateWithoutUserInput!
  update: ProfileUncheckedUpdateWithoutUserInput!
}

input ProfileWhereInput {
  AND: [ProfileWhereInput]
  NOT: [ProfileWhereInput]
  OR: [ProfileWhereInput]
  avatar: StringNullableFilter
  bio: StringNullableFilter
  id: StringFilter
  jobTitle: StringNullableFilter
  name: StringNullableFilter
  surname: StringNullableFilter
  updatedAt: DateTimeFilter
  user: UserWhereInput
  userId: StringFilter
}

input ProfileWhereUniqueInput {
  id: String
  userId: String
}

type Query {
  aggregateCategory(cursor: CategoryWhereUniqueInput, orderBy: [CategoryOrderByWithRelationInput], skip: Int, take: Int, where: CategoryWhereInput): AggregateCategory
  aggregateChat(cursor: ChatWhereUniqueInput, orderBy: [ChatOrderByWithRelationInput], skip: Int, take: Int, where: ChatWhereInput): AggregateChat
  aggregateEvent(cursor: EventWhereUniqueInput, orderBy: [EventOrderByWithRelationInput], skip: Int, take: Int, where: EventWhereInput): AggregateEvent
  aggregateMessage(cursor: MessageWhereUniqueInput, orderBy: [MessageOrderByWithRelationInput], skip: Int, take: Int, where: MessageWhereInput): AggregateMessage
  aggregateProfile(cursor: ProfileWhereUniqueInput, orderBy: [ProfileOrderByWithRelationInput], skip: Int, take: Int, where: ProfileWhereInput): AggregateProfile
  aggregateRoom(cursor: RoomWhereUniqueInput, orderBy: [RoomOrderByWithRelationInput], skip: Int, take: Int, where: RoomWhereInput): AggregateRoom
  aggregateShortLink(cursor: ShortLinkWhereUniqueInput, orderBy: [ShortLinkOrderByWithRelationInput], skip: Int, take: Int, where: ShortLinkWhereInput): AggregateShortLink
  aggregateUser(cursor: UserWhereUniqueInput, orderBy: [UserOrderByWithRelationInput], skip: Int, take: Int, where: UserWhereInput): AggregateUser
  findFirstCategory(cursor: CategoryWhereUniqueInput, distinct: [CategoryScalarFieldEnum], orderBy: [CategoryOrderByWithRelationInput], skip: Int, take: Int, where: CategoryWhereInput): Category
  findFirstChat(cursor: ChatWhereUniqueInput, distinct: [ChatScalarFieldEnum], orderBy: [ChatOrderByWithRelationInput], skip: Int, take: Int, where: ChatWhereInput): Chat
  findFirstEvent(cursor: EventWhereUniqueInput, distinct: [EventScalarFieldEnum], orderBy: [EventOrderByWithRelationInput], skip: Int, take: Int, where: EventWhereInput): Event
  findFirstMessage(cursor: MessageWhereUniqueInput, distinct: [MessageScalarFieldEnum], orderBy: [MessageOrderByWithRelationInput], skip: Int, take: Int, where: MessageWhereInput): Message
  findFirstProfile(cursor: ProfileWhereUniqueInput, distinct: [ProfileScalarFieldEnum], orderBy: [ProfileOrderByWithRelationInput], skip: Int, take: Int, where: ProfileWhereInput): Profile
  findFirstRoom(cursor: RoomWhereUniqueInput, distinct: [RoomScalarFieldEnum], orderBy: [RoomOrderByWithRelationInput], skip: Int, take: Int, where: RoomWhereInput): Room
  findFirstShortLink(cursor: ShortLinkWhereUniqueInput, distinct: [ShortLinkScalarFieldEnum], orderBy: [ShortLinkOrderByWithRelationInput], skip: Int, take: Int, where: ShortLinkWhereInput): ShortLink
  findFirstUser(cursor: UserWhereUniqueInput, distinct: [UserScalarFieldEnum], orderBy: [UserOrderByWithRelationInput], skip: Int, take: Int, where: UserWhereInput): User
  findManyCategory(cursor: CategoryWhereUniqueInput, distinct: [CategoryScalarFieldEnum], orderBy: [CategoryOrderByWithRelationInput], skip: Int, take: Int, where: CategoryWhereInput): [Category!]!
  findManyCategoryCount(cursor: CategoryWhereUniqueInput, distinct: [CategoryScalarFieldEnum], orderBy: [CategoryOrderByWithRelationInput], skip: Int, take: Int, where: CategoryWhereInput): Int!
  findManyChat(cursor: ChatWhereUniqueInput, distinct: [ChatScalarFieldEnum], orderBy: [ChatOrderByWithRelationInput], skip: Int, take: Int, where: ChatWhereInput): [Chat!]!
  findManyChatCount(cursor: ChatWhereUniqueInput, distinct: [ChatScalarFieldEnum], orderBy: [ChatOrderByWithRelationInput], skip: Int, take: Int, where: ChatWhereInput): Int!
  findManyEvent(cursor: EventWhereUniqueInput, distinct: [EventScalarFieldEnum], orderBy: [EventOrderByWithRelationInput], skip: Int, take: Int, where: EventWhereInput): [Event!]!
  findManyEventCount(cursor: EventWhereUniqueInput, distinct: [EventScalarFieldEnum], orderBy: [EventOrderByWithRelationInput], skip: Int, take: Int, where: EventWhereInput): Int!
  findManyMessage(cursor: MessageWhereUniqueInput, distinct: [MessageScalarFieldEnum], orderBy: [MessageOrderByWithRelationInput], skip: Int, take: Int, where: MessageWhereInput): [Message!]!
  findManyMessageCount(cursor: MessageWhereUniqueInput, distinct: [MessageScalarFieldEnum], orderBy: [MessageOrderByWithRelationInput], skip: Int, take: Int, where: MessageWhereInput): Int!
  findManyProfile(cursor: ProfileWhereUniqueInput, distinct: [ProfileScalarFieldEnum], orderBy: [ProfileOrderByWithRelationInput], skip: Int, take: Int, where: ProfileWhereInput): [Profile!]!
  findManyProfileCount(cursor: ProfileWhereUniqueInput, distinct: [ProfileScalarFieldEnum], orderBy: [ProfileOrderByWithRelationInput], skip: Int, take: Int, where: ProfileWhereInput): Int!
  findManyRoom(cursor: RoomWhereUniqueInput, distinct: [RoomScalarFieldEnum], orderBy: [RoomOrderByWithRelationInput], skip: Int, take: Int, where: RoomWhereInput): [Room!]!
  findManyRoomCount(cursor: RoomWhereUniqueInput, distinct: [RoomScalarFieldEnum], orderBy: [RoomOrderByWithRelationInput], skip: Int, take: Int, where: RoomWhereInput): Int!
  findManyShortLink(cursor: ShortLinkWhereUniqueInput, distinct: [ShortLinkScalarFieldEnum], orderBy: [ShortLinkOrderByWithRelationInput], skip: Int, take: Int, where: ShortLinkWhereInput): [ShortLink!]!
  findManyShortLinkCount(cursor: ShortLinkWhereUniqueInput, distinct: [ShortLinkScalarFieldEnum], orderBy: [ShortLinkOrderByWithRelationInput], skip: Int, take: Int, where: ShortLinkWhereInput): Int!
  findManyUser(cursor: UserWhereUniqueInput, distinct: [UserScalarFieldEnum], orderBy: [UserOrderByWithRelationInput], skip: Int, take: Int, where: UserWhereInput): [User!]!
  findManyUserCount(cursor: UserWhereUniqueInput, distinct: [UserScalarFieldEnum], orderBy: [UserOrderByWithRelationInput], skip: Int, take: Int, where: UserWhereInput): Int!
  findMyRegisteredEvents: [Event!]!
  findUniqueCategory(where: CategoryWhereUniqueInput!): Category
  findUniqueChat(where: ChatWhereUniqueInput!): Chat
  findUniqueEvent(where: EventWhereUniqueInput!): Event
  findUniqueMessage(where: MessageWhereUniqueInput!): Message
  findUniqueProfile(where: ProfileWhereUniqueInput!): Profile
  findUniqueRoom(where: RoomWhereUniqueInput!): Room
  findUniqueShortLink(where: ShortLinkWhereUniqueInput!): ShortLink
  findUniqueUser(where: UserWhereUniqueInput!): User
  me: User!
}

enum QueryMode {
  default
  insensitive
}

type Room {
  _count: RoomCountOutputType!
  description: String
  events(cursor: EventWhereUniqueInput, distinct: EventScalarFieldEnum, orderBy: EventOrderByWithRelationInput, skip: Int, take: Int, where: EventWhereInput): [Event!]!
  gallery: [String!]!
  id: String!
  image: String
  title: String!
}

type RoomCountAggregateOutputType {
  _all: Int!
  description: Int!
  gallery: Int!
  id: Int!
  image: Int!
  title: Int!
}

input RoomCountOrderByAggregateInput {
  description: SortOrder
  gallery: SortOrder
  id: SortOrder
  image: SortOrder
  title: SortOrder
}

type RoomCountOutputType {
  events: Int!
}

input RoomCreateInput {
  description: String
  events: EventCreateNestedManyWithoutRoomInput
  gallery: [String]
  id: String!
  image: String
  title: String!
}

input RoomCreateManyInput {
  description: String
  gallery: [String]
  id: String!
  image: String
  title: String!
}

input RoomCreateNestedOneWithoutEventsInput {
  connect: RoomWhereUniqueInput
  connectOrCreate: RoomCreateOrConnectWithoutEventsInput
  create: RoomUncheckedCreateWithoutEventsInput
}

input RoomCreateOrConnectWithoutEventsInput {
  create: RoomUncheckedCreateWithoutEventsInput!
  where: RoomWhereUniqueInput!
}

input RoomCreateWithoutEventsInput {
  description: String
  gallery: [String]
  id: String!
  image: String
  title: String!
}

input RoomCreategalleryInput {
  set: String!
}

type RoomMaxAggregateOutputType {
  description: String
  id: String
  image: String
  title: String
}

input RoomMaxOrderByAggregateInput {
  description: SortOrder
  id: SortOrder
  image: SortOrder
  title: SortOrder
}

type RoomMinAggregateOutputType {
  description: String
  id: String
  image: String
  title: String
}

input RoomMinOrderByAggregateInput {
  description: SortOrder
  id: SortOrder
  image: SortOrder
  title: SortOrder
}

input RoomOrderByWithAggregationInput {
  _count: RoomCountOrderByAggregateInput
  _max: RoomMaxOrderByAggregateInput
  _min: RoomMinOrderByAggregateInput
  description: SortOrder
  gallery: SortOrder
  id: SortOrder
  image: SortOrder
  title: SortOrder
}

input RoomOrderByWithRelationInput {
  description: SortOrder
  events: EventOrderByRelationAggregateInput
  gallery: SortOrder
  id: SortOrder
  image: SortOrder
  title: SortOrder
}

input RoomRelationFilter {
  is: RoomWhereInput
  isNot: RoomWhereInput
}

enum RoomScalarFieldEnum {
  description
  gallery
  id
  image
  title
}

input RoomScalarWhereWithAggregatesInput {
  AND: [RoomScalarWhereWithAggregatesInput]
  NOT: [RoomScalarWhereWithAggregatesInput]
  OR: [RoomScalarWhereWithAggregatesInput]
  description: StringNullableWithAggregatesFilter
  gallery: StringNullableListFilter
  id: StringWithAggregatesFilter
  image: StringNullableWithAggregatesFilter
  title: StringWithAggregatesFilter
}

input RoomUncheckedCreateInput {
  description: String
  events: EventUncheckedCreateNestedManyWithoutRoomInput
  gallery: [String]
  id: String!
  image: String
  title: String!
}

input RoomUncheckedCreateWithoutEventsInput {
  description: String
  gallery: [String]
  id: String!
  image: String
  title: String!
}

input RoomUncheckedUpdateInput {
  description: NullableStringFieldUpdateOperationsInput
  events: EventUncheckedUpdateManyWithoutRoomNestedInput
  gallery: [String]
  id: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input RoomUncheckedUpdateManyInput {
  description: NullableStringFieldUpdateOperationsInput
  gallery: [String]
  id: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input RoomUncheckedUpdateWithoutEventsInput {
  description: NullableStringFieldUpdateOperationsInput
  gallery: [String]
  id: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input RoomUpdateInput {
  description: NullableStringFieldUpdateOperationsInput
  events: EventUpdateManyWithoutRoomNestedInput
  gallery: [String]
  id: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input RoomUpdateManyMutationInput {
  description: NullableStringFieldUpdateOperationsInput
  gallery: [String]
  id: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input RoomUpdateOneRequiredWithoutEventsNestedInput {
  connect: RoomWhereUniqueInput
  connectOrCreate: RoomCreateOrConnectWithoutEventsInput
  create: RoomUncheckedCreateWithoutEventsInput
  update: RoomUncheckedUpdateWithoutEventsInput
  upsert: RoomUpsertWithoutEventsInput
}

input RoomUpdateWithoutEventsInput {
  description: NullableStringFieldUpdateOperationsInput
  gallery: [String]
  id: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input RoomUpdategalleryInput {
  push: [String]
  set: [String]
}

input RoomUpsertWithoutEventsInput {
  create: RoomUncheckedCreateWithoutEventsInput!
  update: RoomUncheckedUpdateWithoutEventsInput!
}

input RoomWhereInput {
  AND: [RoomWhereInput]
  NOT: [RoomWhereInput]
  OR: [RoomWhereInput]
  description: StringNullableFilter
  events: EventListRelationFilter
  gallery: StringNullableListFilter
  id: StringFilter
  image: StringNullableFilter
  title: StringFilter
}

input RoomWhereUniqueInput {
  id: String
}

input SendMessageInput {
  chatId: String!
  message: String!
}

type ShortLink {
  event: Event!
  eventId: String!
  path: String!
  user: User!
  userId: String!
}

type ShortLinkCountAggregateOutputType {
  _all: Int!
  eventId: Int!
  path: Int!
  userId: Int!
}

input ShortLinkCountOrderByAggregateInput {
  eventId: SortOrder
  path: SortOrder
  userId: SortOrder
}

input ShortLinkCreateInput {
  event: EventCreateNestedOneWithoutShortLinksInput!
  path: String!
  user: UserCreateNestedOneWithoutShortLinksInput!
}

input ShortLinkCreateManyEventInput {
  path: String!
  userId: String!
}

input ShortLinkCreateManyEventInputEnvelope {
  data: ShortLinkCreateManyEventInput!
  skipDuplicates: Boolean
}

input ShortLinkCreateManyInput {
  eventId: String!
  path: String!
  userId: String!
}

input ShortLinkCreateManyUserInput {
  eventId: String!
  path: String!
}

input ShortLinkCreateManyUserInputEnvelope {
  data: ShortLinkCreateManyUserInput!
  skipDuplicates: Boolean
}

input ShortLinkCreateNestedManyWithoutEventInput {
  connect: [ShortLinkWhereUniqueInput]
  connectOrCreate: [ShortLinkCreateOrConnectWithoutEventInput]
  create: [ShortLinkCreateWithoutEventInput]
  createMany: ShortLinkCreateManyEventInputEnvelope
}

input ShortLinkCreateNestedManyWithoutUserInput {
  connect: [ShortLinkWhereUniqueInput]
  connectOrCreate: [ShortLinkCreateOrConnectWithoutUserInput]
  create: [ShortLinkCreateWithoutUserInput]
  createMany: ShortLinkCreateManyUserInputEnvelope
}

input ShortLinkCreateOrConnectWithoutEventInput {
  create: ShortLinkUncheckedCreateWithoutEventInput!
  where: ShortLinkWhereUniqueInput!
}

input ShortLinkCreateOrConnectWithoutUserInput {
  create: ShortLinkUncheckedCreateWithoutUserInput!
  where: ShortLinkWhereUniqueInput!
}

input ShortLinkCreateWithoutEventInput {
  path: String!
  user: UserCreateNestedOneWithoutShortLinksInput!
}

input ShortLinkCreateWithoutUserInput {
  event: EventCreateNestedOneWithoutShortLinksInput!
  path: String!
}

input ShortLinkListRelationFilter {
  every: ShortLinkWhereInput
  none: ShortLinkWhereInput
  some: ShortLinkWhereInput
}

type ShortLinkMaxAggregateOutputType {
  eventId: String
  path: String
  userId: String
}

input ShortLinkMaxOrderByAggregateInput {
  eventId: SortOrder
  path: SortOrder
  userId: SortOrder
}

type ShortLinkMinAggregateOutputType {
  eventId: String
  path: String
  userId: String
}

input ShortLinkMinOrderByAggregateInput {
  eventId: SortOrder
  path: SortOrder
  userId: SortOrder
}

input ShortLinkOrderByRelationAggregateInput {
  _count: SortOrder
}

input ShortLinkOrderByWithAggregationInput {
  _count: ShortLinkCountOrderByAggregateInput
  _max: ShortLinkMaxOrderByAggregateInput
  _min: ShortLinkMinOrderByAggregateInput
  eventId: SortOrder
  path: SortOrder
  userId: SortOrder
}

input ShortLinkOrderByWithRelationInput {
  event: EventOrderByWithRelationInput
  eventId: SortOrder
  path: SortOrder
  user: UserOrderByWithRelationInput
  userId: SortOrder
}

enum ShortLinkScalarFieldEnum {
  eventId
  path
  userId
}

input ShortLinkScalarWhereInput {
  AND: [ShortLinkScalarWhereInput]
  NOT: [ShortLinkScalarWhereInput]
  OR: [ShortLinkScalarWhereInput]
  eventId: StringFilter
  path: StringFilter
  userId: StringFilter
}

input ShortLinkScalarWhereWithAggregatesInput {
  AND: [ShortLinkScalarWhereWithAggregatesInput]
  NOT: [ShortLinkScalarWhereWithAggregatesInput]
  OR: [ShortLinkScalarWhereWithAggregatesInput]
  eventId: StringWithAggregatesFilter
  path: StringWithAggregatesFilter
  userId: StringWithAggregatesFilter
}

input ShortLinkUncheckedCreateInput {
  eventId: String!
  path: String!
  userId: String!
}

input ShortLinkUncheckedCreateNestedManyWithoutEventInput {
  connect: [ShortLinkWhereUniqueInput]
  connectOrCreate: [ShortLinkCreateOrConnectWithoutEventInput]
  create: [ShortLinkCreateWithoutEventInput]
  createMany: ShortLinkCreateManyEventInputEnvelope
}

input ShortLinkUncheckedCreateNestedManyWithoutUserInput {
  connect: [ShortLinkWhereUniqueInput]
  connectOrCreate: [ShortLinkCreateOrConnectWithoutUserInput]
  create: [ShortLinkCreateWithoutUserInput]
  createMany: ShortLinkCreateManyUserInputEnvelope
}

input ShortLinkUncheckedCreateWithoutEventInput {
  path: String!
  userId: String!
}

input ShortLinkUncheckedCreateWithoutUserInput {
  eventId: String!
  path: String!
}

input ShortLinkUncheckedUpdateInput {
  eventId: StringFieldUpdateOperationsInput
  path: StringFieldUpdateOperationsInput
  userId: StringFieldUpdateOperationsInput
}

input ShortLinkUncheckedUpdateManyInput {
  eventId: StringFieldUpdateOperationsInput
  path: StringFieldUpdateOperationsInput
  userId: StringFieldUpdateOperationsInput
}

input ShortLinkUncheckedUpdateManyWithoutEventNestedInput {
  connect: [ShortLinkWhereUniqueInput]
  connectOrCreate: [ShortLinkCreateOrConnectWithoutEventInput]
  create: [ShortLinkCreateWithoutEventInput]
  createMany: ShortLinkCreateManyEventInputEnvelope
  delete: [ShortLinkWhereUniqueInput]
  deleteMany: [ShortLinkScalarWhereInput]
  disconnect: [ShortLinkWhereUniqueInput]
  set: [ShortLinkWhereUniqueInput]
  update: [ShortLinkUpdateWithWhereUniqueWithoutEventInput]
  updateMany: [ShortLinkUpdateManyWithWhereWithoutEventInput]
  upsert: [ShortLinkUpsertWithWhereUniqueWithoutEventInput]
}

input ShortLinkUncheckedUpdateManyWithoutShortLinksInput {
  path: StringFieldUpdateOperationsInput
  userId: StringFieldUpdateOperationsInput
}

input ShortLinkUncheckedUpdateManyWithoutUserNestedInput {
  connect: [ShortLinkWhereUniqueInput]
  connectOrCreate: [ShortLinkCreateOrConnectWithoutUserInput]
  create: [ShortLinkCreateWithoutUserInput]
  createMany: ShortLinkCreateManyUserInputEnvelope
  delete: [ShortLinkWhereUniqueInput]
  deleteMany: [ShortLinkScalarWhereInput]
  disconnect: [ShortLinkWhereUniqueInput]
  set: [ShortLinkWhereUniqueInput]
  update: [ShortLinkUpdateWithWhereUniqueWithoutUserInput]
  updateMany: [ShortLinkUpdateManyWithWhereWithoutUserInput]
  upsert: [ShortLinkUpsertWithWhereUniqueWithoutUserInput]
}

input ShortLinkUncheckedUpdateWithoutEventInput {
  path: StringFieldUpdateOperationsInput
  userId: StringFieldUpdateOperationsInput
}

input ShortLinkUncheckedUpdateWithoutUserInput {
  eventId: StringFieldUpdateOperationsInput
  path: StringFieldUpdateOperationsInput
}

input ShortLinkUpdateInput {
  event: EventUpdateOneRequiredWithoutShortLinksNestedInput
  path: StringFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutShortLinksNestedInput
}

input ShortLinkUpdateManyMutationInput {
  path: StringFieldUpdateOperationsInput
}

input ShortLinkUpdateManyWithWhereWithoutEventInput {
  data: ShortLinkUncheckedUpdateManyWithoutShortLinksInput!
  where: ShortLinkScalarWhereInput!
}

input ShortLinkUpdateManyWithWhereWithoutUserInput {
  data: ShortLinkUncheckedUpdateManyWithoutShortLinksInput!
  where: ShortLinkScalarWhereInput!
}

input ShortLinkUpdateManyWithoutEventNestedInput {
  connect: [ShortLinkWhereUniqueInput]
  connectOrCreate: [ShortLinkCreateOrConnectWithoutEventInput]
  create: [ShortLinkCreateWithoutEventInput]
  createMany: ShortLinkCreateManyEventInputEnvelope
  delete: [ShortLinkWhereUniqueInput]
  deleteMany: [ShortLinkScalarWhereInput]
  disconnect: [ShortLinkWhereUniqueInput]
  set: [ShortLinkWhereUniqueInput]
  update: [ShortLinkUpdateWithWhereUniqueWithoutEventInput]
  updateMany: [ShortLinkUpdateManyWithWhereWithoutEventInput]
  upsert: [ShortLinkUpsertWithWhereUniqueWithoutEventInput]
}

input ShortLinkUpdateManyWithoutUserNestedInput {
  connect: [ShortLinkWhereUniqueInput]
  connectOrCreate: [ShortLinkCreateOrConnectWithoutUserInput]
  create: [ShortLinkCreateWithoutUserInput]
  createMany: ShortLinkCreateManyUserInputEnvelope
  delete: [ShortLinkWhereUniqueInput]
  deleteMany: [ShortLinkScalarWhereInput]
  disconnect: [ShortLinkWhereUniqueInput]
  set: [ShortLinkWhereUniqueInput]
  update: [ShortLinkUpdateWithWhereUniqueWithoutUserInput]
  updateMany: [ShortLinkUpdateManyWithWhereWithoutUserInput]
  upsert: [ShortLinkUpsertWithWhereUniqueWithoutUserInput]
}

input ShortLinkUpdateWithWhereUniqueWithoutEventInput {
  data: ShortLinkUncheckedUpdateWithoutEventInput!
  where: ShortLinkWhereUniqueInput!
}

input ShortLinkUpdateWithWhereUniqueWithoutUserInput {
  data: ShortLinkUncheckedUpdateWithoutUserInput!
  where: ShortLinkWhereUniqueInput!
}

input ShortLinkUpdateWithoutEventInput {
  path: StringFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutShortLinksNestedInput
}

input ShortLinkUpdateWithoutUserInput {
  event: EventUpdateOneRequiredWithoutShortLinksNestedInput
  path: StringFieldUpdateOperationsInput
}

input ShortLinkUpsertWithWhereUniqueWithoutEventInput {
  create: ShortLinkUncheckedCreateWithoutEventInput!
  update: ShortLinkUncheckedUpdateWithoutEventInput!
  where: ShortLinkWhereUniqueInput!
}

input ShortLinkUpsertWithWhereUniqueWithoutUserInput {
  create: ShortLinkUncheckedCreateWithoutUserInput!
  update: ShortLinkUncheckedUpdateWithoutUserInput!
  where: ShortLinkWhereUniqueInput!
}

input ShortLinkWhereInput {
  AND: [ShortLinkWhereInput]
  NOT: [ShortLinkWhereInput]
  OR: [ShortLinkWhereInput]
  event: EventWhereInput
  eventId: StringFilter
  path: StringFilter
  user: UserWhereInput
  userId: StringFilter
}

input ShortLinkWhereUniqueInput {
  path: String
}

input SignInInput {
  password: String!
  username: String!
}

input SignUpInput {
  password: String!
  username: String!
}

enum SortOrder {
  asc
  desc
}

input StringFieldUpdateOperationsInput {
  set: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringFilter
  notIn: [String]
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringNullableFilter
  notIn: [String]
  startsWith: String
}

input StringNullableListFilter {
  equals: [String]
  has: String
  hasEvery: [String]
  hasSome: [String]
  isEmpty: Boolean
}

input StringNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedStringNullableFilter
  _min: NestedStringNullableFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringNullableWithAggregatesFilter
  notIn: [String]
  startsWith: String
}

input StringWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedStringFilter
  _min: NestedStringFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringWithAggregatesFilter
  notIn: [String]
  startsWith: String
}

type Subscription {
  chat(chatId: String!): Message
}

enum TransactionIsolationLevel {
  ReadCommitted
  ReadUncommitted
  RepeatableRead
  Serializable
}

input UpdateMyProfileInput {
  avatar: NullableStringFieldUpdateOperationsInput
  bio: NullableStringFieldUpdateOperationsInput
  jobTitle: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  surname: NullableStringFieldUpdateOperationsInput
}

type User {
  _count: UserCountOutputType!
  chats(cursor: ChatWhereUniqueInput, distinct: ChatScalarFieldEnum, orderBy: ChatOrderByWithRelationInput, skip: Int, take: Int, where: ChatWhereInput): [Chat!]!
  child: User
  createdAt: DateTime!
  eventsIssued(cursor: EventWhereUniqueInput, distinct: EventScalarFieldEnum, orderBy: EventOrderByWithRelationInput, skip: Int, take: Int, where: EventWhereInput): [Event!]!
  eventsParticipating(cursor: EventWhereUniqueInput, distinct: EventScalarFieldEnum, orderBy: EventOrderByWithRelationInput, skip: Int, take: Int, where: EventWhereInput): [Event!]!
  eventsResponsible(cursor: EventWhereUniqueInput, distinct: EventScalarFieldEnum, orderBy: EventOrderByWithRelationInput, skip: Int, take: Int, where: EventWhereInput): [Event!]!
  id: String!
  messages(cursor: MessageWhereUniqueInput, distinct: MessageScalarFieldEnum, orderBy: MessageOrderByWithRelationInput, skip: Int, take: Int, where: MessageWhereInput): [Message!]!
  parent: User
  parentId: String
  password: String!
  profile: Profile
  role: UserRole!
  shortLinks(cursor: ShortLinkWhereUniqueInput, distinct: ShortLinkScalarFieldEnum, orderBy: ShortLinkOrderByWithRelationInput, skip: Int, take: Int, where: ShortLinkWhereInput): [ShortLink!]!
  username: String!
}

type UserAndToken {
  token: String!
  user: User!
}

type UserCountAggregateOutputType {
  _all: Int!
  createdAt: Int!
  id: Int!
  parentId: Int!
  password: Int!
  role: Int!
  username: Int!
}

input UserCountOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  parentId: SortOrder
  password: SortOrder
  role: SortOrder
  username: SortOrder
}

type UserCountOutputType {
  chats: Int!
  eventsIssued: Int!
  eventsParticipating: Int!
  eventsResponsible: Int!
  messages: Int!
  shortLinks: Int!
}

input UserCreateInput {
  chats: ChatCreateNestedManyWithoutMembersInput
  child: UserCreateNestedOneWithoutParentInput
  createdAt: DateTime
  eventsIssued: EventCreateNestedManyWithoutIssuedByInput
  eventsParticipating: EventCreateNestedManyWithoutParticipantsInput
  eventsResponsible: EventCreateNestedManyWithoutResponsiblesInput
  id: String
  messages: MessageCreateNestedManyWithoutSenderInput
  parent: UserCreateNestedOneWithoutChildInput
  password: String!
  profile: ProfileCreateNestedOneWithoutUserInput
  role: UserRole!
  shortLinks: ShortLinkCreateNestedManyWithoutUserInput
  username: String!
}

input UserCreateManyInput {
  createdAt: DateTime
  id: String
  parentId: String
  password: String!
  role: UserRole!
  username: String!
}

input UserCreateNestedManyWithoutChatsInput {
  connect: [UserWhereUniqueInput]
  connectOrCreate: [UserCreateOrConnectWithoutChatsInput]
  create: [UserCreateWithoutChatsInput]
}

input UserCreateNestedManyWithoutEventsParticipatingInput {
  connect: [UserWhereUniqueInput]
  connectOrCreate: [UserCreateOrConnectWithoutEventsParticipatingInput]
  create: [UserCreateWithoutEventsParticipatingInput]
}

input UserCreateNestedManyWithoutEventsResponsibleInput {
  connect: [UserWhereUniqueInput]
  connectOrCreate: [UserCreateOrConnectWithoutEventsResponsibleInput]
  create: [UserCreateWithoutEventsResponsibleInput]
}

input UserCreateNestedOneWithoutChildInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutChildInput
  create: UserUncheckedCreateWithoutChildInput
}

input UserCreateNestedOneWithoutEventsIssuedInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutEventsIssuedInput
  create: UserUncheckedCreateWithoutEventsIssuedInput
}

input UserCreateNestedOneWithoutMessagesInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutMessagesInput
  create: UserUncheckedCreateWithoutMessagesInput
}

input UserCreateNestedOneWithoutParentInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutParentInput
  create: UserUncheckedCreateWithoutParentInput
}

input UserCreateNestedOneWithoutProfileInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutProfileInput
  create: UserUncheckedCreateWithoutProfileInput
}

input UserCreateNestedOneWithoutShortLinksInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutShortLinksInput
  create: UserUncheckedCreateWithoutShortLinksInput
}

input UserCreateOrConnectWithoutChatsInput {
  create: UserUncheckedCreateWithoutChatsInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutChildInput {
  create: UserUncheckedCreateWithoutChildInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutEventsIssuedInput {
  create: UserUncheckedCreateWithoutEventsIssuedInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutEventsParticipatingInput {
  create: UserUncheckedCreateWithoutEventsParticipatingInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutEventsResponsibleInput {
  create: UserUncheckedCreateWithoutEventsResponsibleInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutMessagesInput {
  create: UserUncheckedCreateWithoutMessagesInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutParentInput {
  create: UserUncheckedCreateWithoutParentInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutProfileInput {
  create: UserUncheckedCreateWithoutProfileInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutShortLinksInput {
  create: UserUncheckedCreateWithoutShortLinksInput!
  where: UserWhereUniqueInput!
}

input UserCreateWithoutChatsInput {
  child: UserCreateNestedOneWithoutParentInput
  createdAt: DateTime
  eventsIssued: EventCreateNestedManyWithoutIssuedByInput
  eventsParticipating: EventCreateNestedManyWithoutParticipantsInput
  eventsResponsible: EventCreateNestedManyWithoutResponsiblesInput
  id: String
  messages: MessageCreateNestedManyWithoutSenderInput
  parent: UserCreateNestedOneWithoutChildInput
  password: String!
  profile: ProfileCreateNestedOneWithoutUserInput
  role: UserRole!
  shortLinks: ShortLinkCreateNestedManyWithoutUserInput
  username: String!
}

input UserCreateWithoutChildInput {
  chats: ChatCreateNestedManyWithoutMembersInput
  createdAt: DateTime
  eventsIssued: EventCreateNestedManyWithoutIssuedByInput
  eventsParticipating: EventCreateNestedManyWithoutParticipantsInput
  eventsResponsible: EventCreateNestedManyWithoutResponsiblesInput
  id: String
  messages: MessageCreateNestedManyWithoutSenderInput
  parent: UserCreateNestedOneWithoutChildInput
  password: String!
  profile: ProfileCreateNestedOneWithoutUserInput
  role: UserRole!
  shortLinks: ShortLinkCreateNestedManyWithoutUserInput
  username: String!
}

input UserCreateWithoutEventsIssuedInput {
  chats: ChatCreateNestedManyWithoutMembersInput
  child: UserCreateNestedOneWithoutParentInput
  createdAt: DateTime
  eventsParticipating: EventCreateNestedManyWithoutParticipantsInput
  eventsResponsible: EventCreateNestedManyWithoutResponsiblesInput
  id: String
  messages: MessageCreateNestedManyWithoutSenderInput
  parent: UserCreateNestedOneWithoutChildInput
  password: String!
  profile: ProfileCreateNestedOneWithoutUserInput
  role: UserRole!
  shortLinks: ShortLinkCreateNestedManyWithoutUserInput
  username: String!
}

input UserCreateWithoutEventsParticipatingInput {
  chats: ChatCreateNestedManyWithoutMembersInput
  child: UserCreateNestedOneWithoutParentInput
  createdAt: DateTime
  eventsIssued: EventCreateNestedManyWithoutIssuedByInput
  eventsResponsible: EventCreateNestedManyWithoutResponsiblesInput
  id: String
  messages: MessageCreateNestedManyWithoutSenderInput
  parent: UserCreateNestedOneWithoutChildInput
  password: String!
  profile: ProfileCreateNestedOneWithoutUserInput
  role: UserRole!
  shortLinks: ShortLinkCreateNestedManyWithoutUserInput
  username: String!
}

input UserCreateWithoutEventsResponsibleInput {
  chats: ChatCreateNestedManyWithoutMembersInput
  child: UserCreateNestedOneWithoutParentInput
  createdAt: DateTime
  eventsIssued: EventCreateNestedManyWithoutIssuedByInput
  eventsParticipating: EventCreateNestedManyWithoutParticipantsInput
  id: String
  messages: MessageCreateNestedManyWithoutSenderInput
  parent: UserCreateNestedOneWithoutChildInput
  password: String!
  profile: ProfileCreateNestedOneWithoutUserInput
  role: UserRole!
  shortLinks: ShortLinkCreateNestedManyWithoutUserInput
  username: String!
}

input UserCreateWithoutMessagesInput {
  chats: ChatCreateNestedManyWithoutMembersInput
  child: UserCreateNestedOneWithoutParentInput
  createdAt: DateTime
  eventsIssued: EventCreateNestedManyWithoutIssuedByInput
  eventsParticipating: EventCreateNestedManyWithoutParticipantsInput
  eventsResponsible: EventCreateNestedManyWithoutResponsiblesInput
  id: String
  parent: UserCreateNestedOneWithoutChildInput
  password: String!
  profile: ProfileCreateNestedOneWithoutUserInput
  role: UserRole!
  shortLinks: ShortLinkCreateNestedManyWithoutUserInput
  username: String!
}

input UserCreateWithoutParentInput {
  chats: ChatCreateNestedManyWithoutMembersInput
  child: UserCreateNestedOneWithoutParentInput
  createdAt: DateTime
  eventsIssued: EventCreateNestedManyWithoutIssuedByInput
  eventsParticipating: EventCreateNestedManyWithoutParticipantsInput
  eventsResponsible: EventCreateNestedManyWithoutResponsiblesInput
  id: String
  messages: MessageCreateNestedManyWithoutSenderInput
  password: String!
  profile: ProfileCreateNestedOneWithoutUserInput
  role: UserRole!
  shortLinks: ShortLinkCreateNestedManyWithoutUserInput
  username: String!
}

input UserCreateWithoutProfileInput {
  chats: ChatCreateNestedManyWithoutMembersInput
  child: UserCreateNestedOneWithoutParentInput
  createdAt: DateTime
  eventsIssued: EventCreateNestedManyWithoutIssuedByInput
  eventsParticipating: EventCreateNestedManyWithoutParticipantsInput
  eventsResponsible: EventCreateNestedManyWithoutResponsiblesInput
  id: String
  messages: MessageCreateNestedManyWithoutSenderInput
  parent: UserCreateNestedOneWithoutChildInput
  password: String!
  role: UserRole!
  shortLinks: ShortLinkCreateNestedManyWithoutUserInput
  username: String!
}

input UserCreateWithoutShortLinksInput {
  chats: ChatCreateNestedManyWithoutMembersInput
  child: UserCreateNestedOneWithoutParentInput
  createdAt: DateTime
  eventsIssued: EventCreateNestedManyWithoutIssuedByInput
  eventsParticipating: EventCreateNestedManyWithoutParticipantsInput
  eventsResponsible: EventCreateNestedManyWithoutResponsiblesInput
  id: String
  messages: MessageCreateNestedManyWithoutSenderInput
  parent: UserCreateNestedOneWithoutChildInput
  password: String!
  profile: ProfileCreateNestedOneWithoutUserInput
  role: UserRole!
  username: String!
}

input UserListRelationFilter {
  every: UserWhereInput
  none: UserWhereInput
  some: UserWhereInput
}

type UserMaxAggregateOutputType {
  createdAt: DateTime
  id: String
  parentId: String
  password: String
  role: UserRole
  username: String
}

input UserMaxOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  parentId: SortOrder
  password: SortOrder
  role: SortOrder
  username: SortOrder
}

type UserMinAggregateOutputType {
  createdAt: DateTime
  id: String
  parentId: String
  password: String
  role: UserRole
  username: String
}

input UserMinOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  parentId: SortOrder
  password: SortOrder
  role: SortOrder
  username: SortOrder
}

input UserOrderByRelationAggregateInput {
  _count: SortOrder
}

input UserOrderByWithAggregationInput {
  _count: UserCountOrderByAggregateInput
  _max: UserMaxOrderByAggregateInput
  _min: UserMinOrderByAggregateInput
  createdAt: SortOrder
  id: SortOrder
  parentId: SortOrder
  password: SortOrder
  role: SortOrder
  username: SortOrder
}

input UserOrderByWithRelationInput {
  chats: ChatOrderByRelationAggregateInput
  child: UserOrderByWithRelationInput
  createdAt: SortOrder
  eventsIssued: EventOrderByRelationAggregateInput
  eventsParticipating: EventOrderByRelationAggregateInput
  eventsResponsible: EventOrderByRelationAggregateInput
  id: SortOrder
  messages: MessageOrderByRelationAggregateInput
  parent: UserOrderByWithRelationInput
  parentId: SortOrder
  password: SortOrder
  profile: ProfileOrderByWithRelationInput
  role: SortOrder
  shortLinks: ShortLinkOrderByRelationAggregateInput
  username: SortOrder
}

input UserRelationFilter {
  is: UserWhereInput
  isNot: UserWhereInput
}

enum UserRole {
  Dean
  Parent
  Staff
  Student
}

enum UserScalarFieldEnum {
  createdAt
  id
  parentId
  password
  role
  username
}

input UserScalarWhereInput {
  AND: [UserScalarWhereInput]
  NOT: [UserScalarWhereInput]
  OR: [UserScalarWhereInput]
  createdAt: DateTimeFilter
  id: StringFilter
  parentId: StringNullableFilter
  password: StringFilter
  role: EnumUserRoleFilter
  username: StringFilter
}

input UserScalarWhereWithAggregatesInput {
  AND: [UserScalarWhereWithAggregatesInput]
  NOT: [UserScalarWhereWithAggregatesInput]
  OR: [UserScalarWhereWithAggregatesInput]
  createdAt: DateTimeWithAggregatesFilter
  id: StringWithAggregatesFilter
  parentId: StringNullableWithAggregatesFilter
  password: StringWithAggregatesFilter
  role: EnumUserRoleWithAggregatesFilter
  username: StringWithAggregatesFilter
}

input UserUncheckedCreateInput {
  chats: ChatUncheckedCreateNestedManyWithoutMembersInput
  child: UserUncheckedCreateNestedOneWithoutParentInput
  createdAt: DateTime
  eventsIssued: EventUncheckedCreateNestedManyWithoutIssuedByInput
  eventsParticipating: EventUncheckedCreateNestedManyWithoutParticipantsInput
  eventsResponsible: EventUncheckedCreateNestedManyWithoutResponsiblesInput
  id: String
  messages: MessageUncheckedCreateNestedManyWithoutSenderInput
  parentId: String
  password: String!
  profile: ProfileUncheckedCreateNestedOneWithoutUserInput
  role: UserRole!
  shortLinks: ShortLinkUncheckedCreateNestedManyWithoutUserInput
  username: String!
}

input UserUncheckedCreateNestedManyWithoutChatsInput {
  connect: [UserWhereUniqueInput]
  connectOrCreate: [UserCreateOrConnectWithoutChatsInput]
  create: [UserCreateWithoutChatsInput]
}

input UserUncheckedCreateNestedManyWithoutEventsParticipatingInput {
  connect: [UserWhereUniqueInput]
  connectOrCreate: [UserCreateOrConnectWithoutEventsParticipatingInput]
  create: [UserCreateWithoutEventsParticipatingInput]
}

input UserUncheckedCreateNestedManyWithoutEventsResponsibleInput {
  connect: [UserWhereUniqueInput]
  connectOrCreate: [UserCreateOrConnectWithoutEventsResponsibleInput]
  create: [UserCreateWithoutEventsResponsibleInput]
}

input UserUncheckedCreateNestedOneWithoutParentInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutParentInput
  create: UserUncheckedCreateWithoutParentInput
}

input UserUncheckedCreateWithoutChatsInput {
  child: UserUncheckedCreateNestedOneWithoutParentInput
  createdAt: DateTime
  eventsIssued: EventUncheckedCreateNestedManyWithoutIssuedByInput
  eventsParticipating: EventUncheckedCreateNestedManyWithoutParticipantsInput
  eventsResponsible: EventUncheckedCreateNestedManyWithoutResponsiblesInput
  id: String
  messages: MessageUncheckedCreateNestedManyWithoutSenderInput
  parentId: String
  password: String!
  profile: ProfileUncheckedCreateNestedOneWithoutUserInput
  role: UserRole!
  shortLinks: ShortLinkUncheckedCreateNestedManyWithoutUserInput
  username: String!
}

input UserUncheckedCreateWithoutChildInput {
  chats: ChatUncheckedCreateNestedManyWithoutMembersInput
  createdAt: DateTime
  eventsIssued: EventUncheckedCreateNestedManyWithoutIssuedByInput
  eventsParticipating: EventUncheckedCreateNestedManyWithoutParticipantsInput
  eventsResponsible: EventUncheckedCreateNestedManyWithoutResponsiblesInput
  id: String
  messages: MessageUncheckedCreateNestedManyWithoutSenderInput
  parentId: String
  password: String!
  profile: ProfileUncheckedCreateNestedOneWithoutUserInput
  role: UserRole!
  shortLinks: ShortLinkUncheckedCreateNestedManyWithoutUserInput
  username: String!
}

input UserUncheckedCreateWithoutEventsIssuedInput {
  chats: ChatUncheckedCreateNestedManyWithoutMembersInput
  child: UserUncheckedCreateNestedOneWithoutParentInput
  createdAt: DateTime
  eventsParticipating: EventUncheckedCreateNestedManyWithoutParticipantsInput
  eventsResponsible: EventUncheckedCreateNestedManyWithoutResponsiblesInput
  id: String
  messages: MessageUncheckedCreateNestedManyWithoutSenderInput
  parentId: String
  password: String!
  profile: ProfileUncheckedCreateNestedOneWithoutUserInput
  role: UserRole!
  shortLinks: ShortLinkUncheckedCreateNestedManyWithoutUserInput
  username: String!
}

input UserUncheckedCreateWithoutEventsParticipatingInput {
  chats: ChatUncheckedCreateNestedManyWithoutMembersInput
  child: UserUncheckedCreateNestedOneWithoutParentInput
  createdAt: DateTime
  eventsIssued: EventUncheckedCreateNestedManyWithoutIssuedByInput
  eventsResponsible: EventUncheckedCreateNestedManyWithoutResponsiblesInput
  id: String
  messages: MessageUncheckedCreateNestedManyWithoutSenderInput
  parentId: String
  password: String!
  profile: ProfileUncheckedCreateNestedOneWithoutUserInput
  role: UserRole!
  shortLinks: ShortLinkUncheckedCreateNestedManyWithoutUserInput
  username: String!
}

input UserUncheckedCreateWithoutEventsResponsibleInput {
  chats: ChatUncheckedCreateNestedManyWithoutMembersInput
  child: UserUncheckedCreateNestedOneWithoutParentInput
  createdAt: DateTime
  eventsIssued: EventUncheckedCreateNestedManyWithoutIssuedByInput
  eventsParticipating: EventUncheckedCreateNestedManyWithoutParticipantsInput
  id: String
  messages: MessageUncheckedCreateNestedManyWithoutSenderInput
  parentId: String
  password: String!
  profile: ProfileUncheckedCreateNestedOneWithoutUserInput
  role: UserRole!
  shortLinks: ShortLinkUncheckedCreateNestedManyWithoutUserInput
  username: String!
}

input UserUncheckedCreateWithoutMessagesInput {
  chats: ChatUncheckedCreateNestedManyWithoutMembersInput
  child: UserUncheckedCreateNestedOneWithoutParentInput
  createdAt: DateTime
  eventsIssued: EventUncheckedCreateNestedManyWithoutIssuedByInput
  eventsParticipating: EventUncheckedCreateNestedManyWithoutParticipantsInput
  eventsResponsible: EventUncheckedCreateNestedManyWithoutResponsiblesInput
  id: String
  parentId: String
  password: String!
  profile: ProfileUncheckedCreateNestedOneWithoutUserInput
  role: UserRole!
  shortLinks: ShortLinkUncheckedCreateNestedManyWithoutUserInput
  username: String!
}

input UserUncheckedCreateWithoutParentInput {
  chats: ChatUncheckedCreateNestedManyWithoutMembersInput
  child: UserUncheckedCreateNestedOneWithoutParentInput
  createdAt: DateTime
  eventsIssued: EventUncheckedCreateNestedManyWithoutIssuedByInput
  eventsParticipating: EventUncheckedCreateNestedManyWithoutParticipantsInput
  eventsResponsible: EventUncheckedCreateNestedManyWithoutResponsiblesInput
  id: String
  messages: MessageUncheckedCreateNestedManyWithoutSenderInput
  password: String!
  profile: ProfileUncheckedCreateNestedOneWithoutUserInput
  role: UserRole!
  shortLinks: ShortLinkUncheckedCreateNestedManyWithoutUserInput
  username: String!
}

input UserUncheckedCreateWithoutProfileInput {
  chats: ChatUncheckedCreateNestedManyWithoutMembersInput
  child: UserUncheckedCreateNestedOneWithoutParentInput
  createdAt: DateTime
  eventsIssued: EventUncheckedCreateNestedManyWithoutIssuedByInput
  eventsParticipating: EventUncheckedCreateNestedManyWithoutParticipantsInput
  eventsResponsible: EventUncheckedCreateNestedManyWithoutResponsiblesInput
  id: String
  messages: MessageUncheckedCreateNestedManyWithoutSenderInput
  parentId: String
  password: String!
  role: UserRole!
  shortLinks: ShortLinkUncheckedCreateNestedManyWithoutUserInput
  username: String!
}

input UserUncheckedCreateWithoutShortLinksInput {
  chats: ChatUncheckedCreateNestedManyWithoutMembersInput
  child: UserUncheckedCreateNestedOneWithoutParentInput
  createdAt: DateTime
  eventsIssued: EventUncheckedCreateNestedManyWithoutIssuedByInput
  eventsParticipating: EventUncheckedCreateNestedManyWithoutParticipantsInput
  eventsResponsible: EventUncheckedCreateNestedManyWithoutResponsiblesInput
  id: String
  messages: MessageUncheckedCreateNestedManyWithoutSenderInput
  parentId: String
  password: String!
  profile: ProfileUncheckedCreateNestedOneWithoutUserInput
  role: UserRole!
  username: String!
}

input UserUncheckedUpdateInput {
  chats: ChatUncheckedUpdateManyWithoutMembersNestedInput
  child: UserUncheckedUpdateOneWithoutParentNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  eventsIssued: EventUncheckedUpdateManyWithoutIssuedByNestedInput
  eventsParticipating: EventUncheckedUpdateManyWithoutParticipantsNestedInput
  eventsResponsible: EventUncheckedUpdateManyWithoutResponsiblesNestedInput
  id: StringFieldUpdateOperationsInput
  messages: MessageUncheckedUpdateManyWithoutSenderNestedInput
  parentId: NullableStringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  profile: ProfileUncheckedUpdateOneWithoutUserNestedInput
  role: EnumUserRoleFieldUpdateOperationsInput
  shortLinks: ShortLinkUncheckedUpdateManyWithoutUserNestedInput
  username: StringFieldUpdateOperationsInput
}

input UserUncheckedUpdateManyInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  parentId: NullableStringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  role: EnumUserRoleFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
}

input UserUncheckedUpdateManyWithoutChatsNestedInput {
  connect: [UserWhereUniqueInput]
  connectOrCreate: [UserCreateOrConnectWithoutChatsInput]
  create: [UserCreateWithoutChatsInput]
  delete: [UserWhereUniqueInput]
  deleteMany: [UserScalarWhereInput]
  disconnect: [UserWhereUniqueInput]
  set: [UserWhereUniqueInput]
  update: [UserUpdateWithWhereUniqueWithoutChatsInput]
  updateMany: [UserUpdateManyWithWhereWithoutChatsInput]
  upsert: [UserUpsertWithWhereUniqueWithoutChatsInput]
}

input UserUncheckedUpdateManyWithoutEventsParticipatingNestedInput {
  connect: [UserWhereUniqueInput]
  connectOrCreate: [UserCreateOrConnectWithoutEventsParticipatingInput]
  create: [UserCreateWithoutEventsParticipatingInput]
  delete: [UserWhereUniqueInput]
  deleteMany: [UserScalarWhereInput]
  disconnect: [UserWhereUniqueInput]
  set: [UserWhereUniqueInput]
  update: [UserUpdateWithWhereUniqueWithoutEventsParticipatingInput]
  updateMany: [UserUpdateManyWithWhereWithoutEventsParticipatingInput]
  upsert: [UserUpsertWithWhereUniqueWithoutEventsParticipatingInput]
}

input UserUncheckedUpdateManyWithoutEventsResponsibleNestedInput {
  connect: [UserWhereUniqueInput]
  connectOrCreate: [UserCreateOrConnectWithoutEventsResponsibleInput]
  create: [UserCreateWithoutEventsResponsibleInput]
  delete: [UserWhereUniqueInput]
  deleteMany: [UserScalarWhereInput]
  disconnect: [UserWhereUniqueInput]
  set: [UserWhereUniqueInput]
  update: [UserUpdateWithWhereUniqueWithoutEventsResponsibleInput]
  updateMany: [UserUpdateManyWithWhereWithoutEventsResponsibleInput]
  upsert: [UserUpsertWithWhereUniqueWithoutEventsResponsibleInput]
}

input UserUncheckedUpdateManyWithoutMembersInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  parentId: NullableStringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  role: EnumUserRoleFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
}

input UserUncheckedUpdateManyWithoutParticipantsInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  parentId: NullableStringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  role: EnumUserRoleFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
}

input UserUncheckedUpdateManyWithoutResponsiblesInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  parentId: NullableStringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  role: EnumUserRoleFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
}

input UserUncheckedUpdateOneWithoutParentNestedInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutParentInput
  create: UserUncheckedCreateWithoutParentInput
  delete: Boolean
  disconnect: Boolean
  update: UserUncheckedUpdateWithoutParentInput
  upsert: UserUpsertWithoutParentInput
}

input UserUncheckedUpdateWithoutChatsInput {
  child: UserUncheckedUpdateOneWithoutParentNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  eventsIssued: EventUncheckedUpdateManyWithoutIssuedByNestedInput
  eventsParticipating: EventUncheckedUpdateManyWithoutParticipantsNestedInput
  eventsResponsible: EventUncheckedUpdateManyWithoutResponsiblesNestedInput
  id: StringFieldUpdateOperationsInput
  messages: MessageUncheckedUpdateManyWithoutSenderNestedInput
  parentId: NullableStringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  profile: ProfileUncheckedUpdateOneWithoutUserNestedInput
  role: EnumUserRoleFieldUpdateOperationsInput
  shortLinks: ShortLinkUncheckedUpdateManyWithoutUserNestedInput
  username: StringFieldUpdateOperationsInput
}

input UserUncheckedUpdateWithoutChildInput {
  chats: ChatUncheckedUpdateManyWithoutMembersNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  eventsIssued: EventUncheckedUpdateManyWithoutIssuedByNestedInput
  eventsParticipating: EventUncheckedUpdateManyWithoutParticipantsNestedInput
  eventsResponsible: EventUncheckedUpdateManyWithoutResponsiblesNestedInput
  id: StringFieldUpdateOperationsInput
  messages: MessageUncheckedUpdateManyWithoutSenderNestedInput
  parentId: NullableStringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  profile: ProfileUncheckedUpdateOneWithoutUserNestedInput
  role: EnumUserRoleFieldUpdateOperationsInput
  shortLinks: ShortLinkUncheckedUpdateManyWithoutUserNestedInput
  username: StringFieldUpdateOperationsInput
}

input UserUncheckedUpdateWithoutEventsIssuedInput {
  chats: ChatUncheckedUpdateManyWithoutMembersNestedInput
  child: UserUncheckedUpdateOneWithoutParentNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  eventsParticipating: EventUncheckedUpdateManyWithoutParticipantsNestedInput
  eventsResponsible: EventUncheckedUpdateManyWithoutResponsiblesNestedInput
  id: StringFieldUpdateOperationsInput
  messages: MessageUncheckedUpdateManyWithoutSenderNestedInput
  parentId: NullableStringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  profile: ProfileUncheckedUpdateOneWithoutUserNestedInput
  role: EnumUserRoleFieldUpdateOperationsInput
  shortLinks: ShortLinkUncheckedUpdateManyWithoutUserNestedInput
  username: StringFieldUpdateOperationsInput
}

input UserUncheckedUpdateWithoutEventsParticipatingInput {
  chats: ChatUncheckedUpdateManyWithoutMembersNestedInput
  child: UserUncheckedUpdateOneWithoutParentNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  eventsIssued: EventUncheckedUpdateManyWithoutIssuedByNestedInput
  eventsResponsible: EventUncheckedUpdateManyWithoutResponsiblesNestedInput
  id: StringFieldUpdateOperationsInput
  messages: MessageUncheckedUpdateManyWithoutSenderNestedInput
  parentId: NullableStringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  profile: ProfileUncheckedUpdateOneWithoutUserNestedInput
  role: EnumUserRoleFieldUpdateOperationsInput
  shortLinks: ShortLinkUncheckedUpdateManyWithoutUserNestedInput
  username: StringFieldUpdateOperationsInput
}

input UserUncheckedUpdateWithoutEventsResponsibleInput {
  chats: ChatUncheckedUpdateManyWithoutMembersNestedInput
  child: UserUncheckedUpdateOneWithoutParentNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  eventsIssued: EventUncheckedUpdateManyWithoutIssuedByNestedInput
  eventsParticipating: EventUncheckedUpdateManyWithoutParticipantsNestedInput
  id: StringFieldUpdateOperationsInput
  messages: MessageUncheckedUpdateManyWithoutSenderNestedInput
  parentId: NullableStringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  profile: ProfileUncheckedUpdateOneWithoutUserNestedInput
  role: EnumUserRoleFieldUpdateOperationsInput
  shortLinks: ShortLinkUncheckedUpdateManyWithoutUserNestedInput
  username: StringFieldUpdateOperationsInput
}

input UserUncheckedUpdateWithoutMessagesInput {
  chats: ChatUncheckedUpdateManyWithoutMembersNestedInput
  child: UserUncheckedUpdateOneWithoutParentNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  eventsIssued: EventUncheckedUpdateManyWithoutIssuedByNestedInput
  eventsParticipating: EventUncheckedUpdateManyWithoutParticipantsNestedInput
  eventsResponsible: EventUncheckedUpdateManyWithoutResponsiblesNestedInput
  id: StringFieldUpdateOperationsInput
  parentId: NullableStringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  profile: ProfileUncheckedUpdateOneWithoutUserNestedInput
  role: EnumUserRoleFieldUpdateOperationsInput
  shortLinks: ShortLinkUncheckedUpdateManyWithoutUserNestedInput
  username: StringFieldUpdateOperationsInput
}

input UserUncheckedUpdateWithoutParentInput {
  chats: ChatUncheckedUpdateManyWithoutMembersNestedInput
  child: UserUncheckedUpdateOneWithoutParentNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  eventsIssued: EventUncheckedUpdateManyWithoutIssuedByNestedInput
  eventsParticipating: EventUncheckedUpdateManyWithoutParticipantsNestedInput
  eventsResponsible: EventUncheckedUpdateManyWithoutResponsiblesNestedInput
  id: StringFieldUpdateOperationsInput
  messages: MessageUncheckedUpdateManyWithoutSenderNestedInput
  password: StringFieldUpdateOperationsInput
  profile: ProfileUncheckedUpdateOneWithoutUserNestedInput
  role: EnumUserRoleFieldUpdateOperationsInput
  shortLinks: ShortLinkUncheckedUpdateManyWithoutUserNestedInput
  username: StringFieldUpdateOperationsInput
}

input UserUncheckedUpdateWithoutProfileInput {
  chats: ChatUncheckedUpdateManyWithoutMembersNestedInput
  child: UserUncheckedUpdateOneWithoutParentNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  eventsIssued: EventUncheckedUpdateManyWithoutIssuedByNestedInput
  eventsParticipating: EventUncheckedUpdateManyWithoutParticipantsNestedInput
  eventsResponsible: EventUncheckedUpdateManyWithoutResponsiblesNestedInput
  id: StringFieldUpdateOperationsInput
  messages: MessageUncheckedUpdateManyWithoutSenderNestedInput
  parentId: NullableStringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  role: EnumUserRoleFieldUpdateOperationsInput
  shortLinks: ShortLinkUncheckedUpdateManyWithoutUserNestedInput
  username: StringFieldUpdateOperationsInput
}

input UserUncheckedUpdateWithoutShortLinksInput {
  chats: ChatUncheckedUpdateManyWithoutMembersNestedInput
  child: UserUncheckedUpdateOneWithoutParentNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  eventsIssued: EventUncheckedUpdateManyWithoutIssuedByNestedInput
  eventsParticipating: EventUncheckedUpdateManyWithoutParticipantsNestedInput
  eventsResponsible: EventUncheckedUpdateManyWithoutResponsiblesNestedInput
  id: StringFieldUpdateOperationsInput
  messages: MessageUncheckedUpdateManyWithoutSenderNestedInput
  parentId: NullableStringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  profile: ProfileUncheckedUpdateOneWithoutUserNestedInput
  role: EnumUserRoleFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
}

input UserUpdateInput {
  chats: ChatUpdateManyWithoutMembersNestedInput
  child: UserUpdateOneWithoutParentNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  eventsIssued: EventUpdateManyWithoutIssuedByNestedInput
  eventsParticipating: EventUpdateManyWithoutParticipantsNestedInput
  eventsResponsible: EventUpdateManyWithoutResponsiblesNestedInput
  id: StringFieldUpdateOperationsInput
  messages: MessageUpdateManyWithoutSenderNestedInput
  parent: UserUpdateOneWithoutChildNestedInput
  password: StringFieldUpdateOperationsInput
  profile: ProfileUpdateOneWithoutUserNestedInput
  role: EnumUserRoleFieldUpdateOperationsInput
  shortLinks: ShortLinkUpdateManyWithoutUserNestedInput
  username: StringFieldUpdateOperationsInput
}

input UserUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  role: EnumUserRoleFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
}

input UserUpdateManyWithWhereWithoutChatsInput {
  data: UserUncheckedUpdateManyWithoutMembersInput!
  where: UserScalarWhereInput!
}

input UserUpdateManyWithWhereWithoutEventsParticipatingInput {
  data: UserUncheckedUpdateManyWithoutParticipantsInput!
  where: UserScalarWhereInput!
}

input UserUpdateManyWithWhereWithoutEventsResponsibleInput {
  data: UserUncheckedUpdateManyWithoutResponsiblesInput!
  where: UserScalarWhereInput!
}

input UserUpdateManyWithoutChatsNestedInput {
  connect: [UserWhereUniqueInput]
  connectOrCreate: [UserCreateOrConnectWithoutChatsInput]
  create: [UserCreateWithoutChatsInput]
  delete: [UserWhereUniqueInput]
  deleteMany: [UserScalarWhereInput]
  disconnect: [UserWhereUniqueInput]
  set: [UserWhereUniqueInput]
  update: [UserUpdateWithWhereUniqueWithoutChatsInput]
  updateMany: [UserUpdateManyWithWhereWithoutChatsInput]
  upsert: [UserUpsertWithWhereUniqueWithoutChatsInput]
}

input UserUpdateManyWithoutEventsParticipatingNestedInput {
  connect: [UserWhereUniqueInput]
  connectOrCreate: [UserCreateOrConnectWithoutEventsParticipatingInput]
  create: [UserCreateWithoutEventsParticipatingInput]
  delete: [UserWhereUniqueInput]
  deleteMany: [UserScalarWhereInput]
  disconnect: [UserWhereUniqueInput]
  set: [UserWhereUniqueInput]
  update: [UserUpdateWithWhereUniqueWithoutEventsParticipatingInput]
  updateMany: [UserUpdateManyWithWhereWithoutEventsParticipatingInput]
  upsert: [UserUpsertWithWhereUniqueWithoutEventsParticipatingInput]
}

input UserUpdateManyWithoutEventsResponsibleNestedInput {
  connect: [UserWhereUniqueInput]
  connectOrCreate: [UserCreateOrConnectWithoutEventsResponsibleInput]
  create: [UserCreateWithoutEventsResponsibleInput]
  delete: [UserWhereUniqueInput]
  deleteMany: [UserScalarWhereInput]
  disconnect: [UserWhereUniqueInput]
  set: [UserWhereUniqueInput]
  update: [UserUpdateWithWhereUniqueWithoutEventsResponsibleInput]
  updateMany: [UserUpdateManyWithWhereWithoutEventsResponsibleInput]
  upsert: [UserUpsertWithWhereUniqueWithoutEventsResponsibleInput]
}

input UserUpdateOneRequiredWithoutMessagesNestedInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutMessagesInput
  create: UserUncheckedCreateWithoutMessagesInput
  update: UserUncheckedUpdateWithoutMessagesInput
  upsert: UserUpsertWithoutMessagesInput
}

input UserUpdateOneRequiredWithoutProfileNestedInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutProfileInput
  create: UserUncheckedCreateWithoutProfileInput
  update: UserUncheckedUpdateWithoutProfileInput
  upsert: UserUpsertWithoutProfileInput
}

input UserUpdateOneRequiredWithoutShortLinksNestedInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutShortLinksInput
  create: UserUncheckedCreateWithoutShortLinksInput
  update: UserUncheckedUpdateWithoutShortLinksInput
  upsert: UserUpsertWithoutShortLinksInput
}

input UserUpdateOneWithoutChildNestedInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutChildInput
  create: UserUncheckedCreateWithoutChildInput
  delete: Boolean
  disconnect: Boolean
  update: UserUncheckedUpdateWithoutChildInput
  upsert: UserUpsertWithoutChildInput
}

input UserUpdateOneWithoutEventsIssuedNestedInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutEventsIssuedInput
  create: UserUncheckedCreateWithoutEventsIssuedInput
  delete: Boolean
  disconnect: Boolean
  update: UserUncheckedUpdateWithoutEventsIssuedInput
  upsert: UserUpsertWithoutEventsIssuedInput
}

input UserUpdateOneWithoutParentNestedInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutParentInput
  create: UserUncheckedCreateWithoutParentInput
  delete: Boolean
  disconnect: Boolean
  update: UserUncheckedUpdateWithoutParentInput
  upsert: UserUpsertWithoutParentInput
}

input UserUpdateWithWhereUniqueWithoutChatsInput {
  data: UserUncheckedUpdateWithoutChatsInput!
  where: UserWhereUniqueInput!
}

input UserUpdateWithWhereUniqueWithoutEventsParticipatingInput {
  data: UserUncheckedUpdateWithoutEventsParticipatingInput!
  where: UserWhereUniqueInput!
}

input UserUpdateWithWhereUniqueWithoutEventsResponsibleInput {
  data: UserUncheckedUpdateWithoutEventsResponsibleInput!
  where: UserWhereUniqueInput!
}

input UserUpdateWithoutChatsInput {
  child: UserUpdateOneWithoutParentNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  eventsIssued: EventUpdateManyWithoutIssuedByNestedInput
  eventsParticipating: EventUpdateManyWithoutParticipantsNestedInput
  eventsResponsible: EventUpdateManyWithoutResponsiblesNestedInput
  id: StringFieldUpdateOperationsInput
  messages: MessageUpdateManyWithoutSenderNestedInput
  parent: UserUpdateOneWithoutChildNestedInput
  password: StringFieldUpdateOperationsInput
  profile: ProfileUpdateOneWithoutUserNestedInput
  role: EnumUserRoleFieldUpdateOperationsInput
  shortLinks: ShortLinkUpdateManyWithoutUserNestedInput
  username: StringFieldUpdateOperationsInput
}

input UserUpdateWithoutChildInput {
  chats: ChatUpdateManyWithoutMembersNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  eventsIssued: EventUpdateManyWithoutIssuedByNestedInput
  eventsParticipating: EventUpdateManyWithoutParticipantsNestedInput
  eventsResponsible: EventUpdateManyWithoutResponsiblesNestedInput
  id: StringFieldUpdateOperationsInput
  messages: MessageUpdateManyWithoutSenderNestedInput
  parent: UserUpdateOneWithoutChildNestedInput
  password: StringFieldUpdateOperationsInput
  profile: ProfileUpdateOneWithoutUserNestedInput
  role: EnumUserRoleFieldUpdateOperationsInput
  shortLinks: ShortLinkUpdateManyWithoutUserNestedInput
  username: StringFieldUpdateOperationsInput
}

input UserUpdateWithoutEventsIssuedInput {
  chats: ChatUpdateManyWithoutMembersNestedInput
  child: UserUpdateOneWithoutParentNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  eventsParticipating: EventUpdateManyWithoutParticipantsNestedInput
  eventsResponsible: EventUpdateManyWithoutResponsiblesNestedInput
  id: StringFieldUpdateOperationsInput
  messages: MessageUpdateManyWithoutSenderNestedInput
  parent: UserUpdateOneWithoutChildNestedInput
  password: StringFieldUpdateOperationsInput
  profile: ProfileUpdateOneWithoutUserNestedInput
  role: EnumUserRoleFieldUpdateOperationsInput
  shortLinks: ShortLinkUpdateManyWithoutUserNestedInput
  username: StringFieldUpdateOperationsInput
}

input UserUpdateWithoutEventsParticipatingInput {
  chats: ChatUpdateManyWithoutMembersNestedInput
  child: UserUpdateOneWithoutParentNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  eventsIssued: EventUpdateManyWithoutIssuedByNestedInput
  eventsResponsible: EventUpdateManyWithoutResponsiblesNestedInput
  id: StringFieldUpdateOperationsInput
  messages: MessageUpdateManyWithoutSenderNestedInput
  parent: UserUpdateOneWithoutChildNestedInput
  password: StringFieldUpdateOperationsInput
  profile: ProfileUpdateOneWithoutUserNestedInput
  role: EnumUserRoleFieldUpdateOperationsInput
  shortLinks: ShortLinkUpdateManyWithoutUserNestedInput
  username: StringFieldUpdateOperationsInput
}

input UserUpdateWithoutEventsResponsibleInput {
  chats: ChatUpdateManyWithoutMembersNestedInput
  child: UserUpdateOneWithoutParentNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  eventsIssued: EventUpdateManyWithoutIssuedByNestedInput
  eventsParticipating: EventUpdateManyWithoutParticipantsNestedInput
  id: StringFieldUpdateOperationsInput
  messages: MessageUpdateManyWithoutSenderNestedInput
  parent: UserUpdateOneWithoutChildNestedInput
  password: StringFieldUpdateOperationsInput
  profile: ProfileUpdateOneWithoutUserNestedInput
  role: EnumUserRoleFieldUpdateOperationsInput
  shortLinks: ShortLinkUpdateManyWithoutUserNestedInput
  username: StringFieldUpdateOperationsInput
}

input UserUpdateWithoutMessagesInput {
  chats: ChatUpdateManyWithoutMembersNestedInput
  child: UserUpdateOneWithoutParentNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  eventsIssued: EventUpdateManyWithoutIssuedByNestedInput
  eventsParticipating: EventUpdateManyWithoutParticipantsNestedInput
  eventsResponsible: EventUpdateManyWithoutResponsiblesNestedInput
  id: StringFieldUpdateOperationsInput
  parent: UserUpdateOneWithoutChildNestedInput
  password: StringFieldUpdateOperationsInput
  profile: ProfileUpdateOneWithoutUserNestedInput
  role: EnumUserRoleFieldUpdateOperationsInput
  shortLinks: ShortLinkUpdateManyWithoutUserNestedInput
  username: StringFieldUpdateOperationsInput
}

input UserUpdateWithoutParentInput {
  chats: ChatUpdateManyWithoutMembersNestedInput
  child: UserUpdateOneWithoutParentNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  eventsIssued: EventUpdateManyWithoutIssuedByNestedInput
  eventsParticipating: EventUpdateManyWithoutParticipantsNestedInput
  eventsResponsible: EventUpdateManyWithoutResponsiblesNestedInput
  id: StringFieldUpdateOperationsInput
  messages: MessageUpdateManyWithoutSenderNestedInput
  password: StringFieldUpdateOperationsInput
  profile: ProfileUpdateOneWithoutUserNestedInput
  role: EnumUserRoleFieldUpdateOperationsInput
  shortLinks: ShortLinkUpdateManyWithoutUserNestedInput
  username: StringFieldUpdateOperationsInput
}

input UserUpdateWithoutProfileInput {
  chats: ChatUpdateManyWithoutMembersNestedInput
  child: UserUpdateOneWithoutParentNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  eventsIssued: EventUpdateManyWithoutIssuedByNestedInput
  eventsParticipating: EventUpdateManyWithoutParticipantsNestedInput
  eventsResponsible: EventUpdateManyWithoutResponsiblesNestedInput
  id: StringFieldUpdateOperationsInput
  messages: MessageUpdateManyWithoutSenderNestedInput
  parent: UserUpdateOneWithoutChildNestedInput
  password: StringFieldUpdateOperationsInput
  role: EnumUserRoleFieldUpdateOperationsInput
  shortLinks: ShortLinkUpdateManyWithoutUserNestedInput
  username: StringFieldUpdateOperationsInput
}

input UserUpdateWithoutShortLinksInput {
  chats: ChatUpdateManyWithoutMembersNestedInput
  child: UserUpdateOneWithoutParentNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  eventsIssued: EventUpdateManyWithoutIssuedByNestedInput
  eventsParticipating: EventUpdateManyWithoutParticipantsNestedInput
  eventsResponsible: EventUpdateManyWithoutResponsiblesNestedInput
  id: StringFieldUpdateOperationsInput
  messages: MessageUpdateManyWithoutSenderNestedInput
  parent: UserUpdateOneWithoutChildNestedInput
  password: StringFieldUpdateOperationsInput
  profile: ProfileUpdateOneWithoutUserNestedInput
  role: EnumUserRoleFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
}

input UserUpsertWithWhereUniqueWithoutChatsInput {
  create: UserUncheckedCreateWithoutChatsInput!
  update: UserUncheckedUpdateWithoutChatsInput!
  where: UserWhereUniqueInput!
}

input UserUpsertWithWhereUniqueWithoutEventsParticipatingInput {
  create: UserUncheckedCreateWithoutEventsParticipatingInput!
  update: UserUncheckedUpdateWithoutEventsParticipatingInput!
  where: UserWhereUniqueInput!
}

input UserUpsertWithWhereUniqueWithoutEventsResponsibleInput {
  create: UserUncheckedCreateWithoutEventsResponsibleInput!
  update: UserUncheckedUpdateWithoutEventsResponsibleInput!
  where: UserWhereUniqueInput!
}

input UserUpsertWithoutChildInput {
  create: UserUncheckedCreateWithoutChildInput!
  update: UserUncheckedUpdateWithoutChildInput!
}

input UserUpsertWithoutEventsIssuedInput {
  create: UserUncheckedCreateWithoutEventsIssuedInput!
  update: UserUncheckedUpdateWithoutEventsIssuedInput!
}

input UserUpsertWithoutMessagesInput {
  create: UserUncheckedCreateWithoutMessagesInput!
  update: UserUncheckedUpdateWithoutMessagesInput!
}

input UserUpsertWithoutParentInput {
  create: UserUncheckedCreateWithoutParentInput!
  update: UserUncheckedUpdateWithoutParentInput!
}

input UserUpsertWithoutProfileInput {
  create: UserUncheckedCreateWithoutProfileInput!
  update: UserUncheckedUpdateWithoutProfileInput!
}

input UserUpsertWithoutShortLinksInput {
  create: UserUncheckedCreateWithoutShortLinksInput!
  update: UserUncheckedUpdateWithoutShortLinksInput!
}

input UserWhereInput {
  AND: [UserWhereInput]
  NOT: [UserWhereInput]
  OR: [UserWhereInput]
  chats: ChatListRelationFilter
  child: UserWhereInput
  createdAt: DateTimeFilter
  eventsIssued: EventListRelationFilter
  eventsParticipating: EventListRelationFilter
  eventsResponsible: EventListRelationFilter
  id: StringFilter
  messages: MessageListRelationFilter
  parent: UserWhereInput
  parentId: StringNullableFilter
  password: StringFilter
  profile: ProfileWhereInput
  role: EnumUserRoleFilter
  shortLinks: ShortLinkListRelationFilter
  username: StringFilter
}

input UserWhereUniqueInput {
  id: String
  parentId: String
  username: String
}